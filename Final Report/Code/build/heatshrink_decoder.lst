ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"heatshrink_decoder.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.get_bits,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	get_bits:
  24              	.LVL0:
  25              	.LFB10:
  26              		.file 1 "Core/Src/heatshrink_decoder.c"
   1:Core/Src/heatshrink_decoder.c **** #include <stdlib.h>
   2:Core/Src/heatshrink_decoder.c **** #include <string.h>
   3:Core/Src/heatshrink_decoder.c **** #include "heatshrink_decoder.h"
   4:Core/Src/heatshrink_decoder.c **** 
   5:Core/Src/heatshrink_decoder.c **** /* States for the polling state machine. */
   6:Core/Src/heatshrink_decoder.c **** typedef enum {
   7:Core/Src/heatshrink_decoder.c ****     HSDS_TAG_BIT,               /* tag bit */
   8:Core/Src/heatshrink_decoder.c ****     HSDS_YIELD_LITERAL,         /* ready to yield literal byte */
   9:Core/Src/heatshrink_decoder.c ****     HSDS_BACKREF_INDEX_MSB,     /* most significant byte of index */
  10:Core/Src/heatshrink_decoder.c ****     HSDS_BACKREF_INDEX_LSB,     /* least significant byte of index */
  11:Core/Src/heatshrink_decoder.c ****     HSDS_BACKREF_COUNT_MSB,     /* most significant byte of count */
  12:Core/Src/heatshrink_decoder.c ****     HSDS_BACKREF_COUNT_LSB,     /* least significant byte of count */
  13:Core/Src/heatshrink_decoder.c ****     HSDS_YIELD_BACKREF,         /* ready to yield back-reference */
  14:Core/Src/heatshrink_decoder.c **** } HSD_state;
  15:Core/Src/heatshrink_decoder.c **** 
  16:Core/Src/heatshrink_decoder.c **** #if HEATSHRINK_DEBUGGING_LOGS
  17:Core/Src/heatshrink_decoder.c **** #include <stdio.h>
  18:Core/Src/heatshrink_decoder.c **** #include <ctype.h>
  19:Core/Src/heatshrink_decoder.c **** #include <assert.h>
  20:Core/Src/heatshrink_decoder.c **** #define LOG(...) fprintf(stderr, __VA_ARGS__)
  21:Core/Src/heatshrink_decoder.c **** #define ASSERT(X) assert(X)
  22:Core/Src/heatshrink_decoder.c **** static const char *state_names[] = {
  23:Core/Src/heatshrink_decoder.c ****     "tag_bit",
  24:Core/Src/heatshrink_decoder.c ****     "yield_literal",
  25:Core/Src/heatshrink_decoder.c ****     "backref_index_msb",
  26:Core/Src/heatshrink_decoder.c ****     "backref_index_lsb",
  27:Core/Src/heatshrink_decoder.c ****     "backref_count_msb",
  28:Core/Src/heatshrink_decoder.c ****     "backref_count_lsb",
  29:Core/Src/heatshrink_decoder.c ****     "yield_backref",
  30:Core/Src/heatshrink_decoder.c **** };
  31:Core/Src/heatshrink_decoder.c **** #else
  32:Core/Src/heatshrink_decoder.c **** #define LOG(...) /* no-op */
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 2


  33:Core/Src/heatshrink_decoder.c **** #define ASSERT(X) /* no-op */
  34:Core/Src/heatshrink_decoder.c **** #endif
  35:Core/Src/heatshrink_decoder.c **** 
  36:Core/Src/heatshrink_decoder.c **** typedef struct {
  37:Core/Src/heatshrink_decoder.c ****     uint8_t *buf;               /* output buffer */
  38:Core/Src/heatshrink_decoder.c ****     size_t buf_size;            /* buffer size */
  39:Core/Src/heatshrink_decoder.c ****     size_t *output_size;        /* bytes pushed to buffer, so far */
  40:Core/Src/heatshrink_decoder.c **** } output_info;
  41:Core/Src/heatshrink_decoder.c **** 
  42:Core/Src/heatshrink_decoder.c **** #define NO_BITS ((uint16_t)-1)
  43:Core/Src/heatshrink_decoder.c **** 
  44:Core/Src/heatshrink_decoder.c **** /* Forward references. */
  45:Core/Src/heatshrink_decoder.c **** static uint16_t get_bits(heatshrink_decoder *hsd, uint8_t count);
  46:Core/Src/heatshrink_decoder.c **** static void push_byte(heatshrink_decoder *hsd, output_info *oi, uint8_t byte);
  47:Core/Src/heatshrink_decoder.c **** 
  48:Core/Src/heatshrink_decoder.c **** #if HEATSHRINK_DYNAMIC_ALLOC
  49:Core/Src/heatshrink_decoder.c **** heatshrink_decoder *heatshrink_decoder_alloc(uint16_t input_buffer_size,
  50:Core/Src/heatshrink_decoder.c ****                                              uint8_t window_sz2,
  51:Core/Src/heatshrink_decoder.c ****                                              uint8_t lookahead_sz2) {
  52:Core/Src/heatshrink_decoder.c ****     if ((window_sz2 < HEATSHRINK_MIN_WINDOW_BITS) ||
  53:Core/Src/heatshrink_decoder.c ****         (window_sz2 > HEATSHRINK_MAX_WINDOW_BITS) ||
  54:Core/Src/heatshrink_decoder.c ****         (input_buffer_size == 0) ||
  55:Core/Src/heatshrink_decoder.c ****         (lookahead_sz2 < HEATSHRINK_MIN_LOOKAHEAD_BITS) ||
  56:Core/Src/heatshrink_decoder.c ****         (lookahead_sz2 >= window_sz2)) {
  57:Core/Src/heatshrink_decoder.c ****         return NULL;
  58:Core/Src/heatshrink_decoder.c ****     }
  59:Core/Src/heatshrink_decoder.c ****     size_t buffers_sz = (1 << window_sz2) + input_buffer_size;
  60:Core/Src/heatshrink_decoder.c ****     size_t sz = sizeof(heatshrink_decoder) + buffers_sz;
  61:Core/Src/heatshrink_decoder.c ****     heatshrink_decoder *hsd = HEATSHRINK_MALLOC(sz);
  62:Core/Src/heatshrink_decoder.c ****     if (hsd == NULL) { return NULL; }
  63:Core/Src/heatshrink_decoder.c ****     hsd->input_buffer_size = input_buffer_size;
  64:Core/Src/heatshrink_decoder.c ****     hsd->window_sz2 = window_sz2;
  65:Core/Src/heatshrink_decoder.c ****     hsd->lookahead_sz2 = lookahead_sz2;
  66:Core/Src/heatshrink_decoder.c ****     heatshrink_decoder_reset(hsd);
  67:Core/Src/heatshrink_decoder.c ****     LOG("-- allocated decoder with buffer size of %zu (%zu + %u + %u)\n",
  68:Core/Src/heatshrink_decoder.c ****         sz, sizeof(heatshrink_decoder), (1 << window_sz2), input_buffer_size);
  69:Core/Src/heatshrink_decoder.c ****     return hsd;
  70:Core/Src/heatshrink_decoder.c **** }
  71:Core/Src/heatshrink_decoder.c **** 
  72:Core/Src/heatshrink_decoder.c **** void heatshrink_decoder_free(heatshrink_decoder *hsd) {
  73:Core/Src/heatshrink_decoder.c ****     size_t buffers_sz = (1 << hsd->window_sz2) + hsd->input_buffer_size;
  74:Core/Src/heatshrink_decoder.c ****     size_t sz = sizeof(heatshrink_decoder) + buffers_sz;
  75:Core/Src/heatshrink_decoder.c ****     HEATSHRINK_FREE(hsd, sz);
  76:Core/Src/heatshrink_decoder.c ****     (void)sz;   /* may not be used by free */
  77:Core/Src/heatshrink_decoder.c **** }
  78:Core/Src/heatshrink_decoder.c **** #endif
  79:Core/Src/heatshrink_decoder.c **** 
  80:Core/Src/heatshrink_decoder.c **** void heatshrink_decoder_reset(heatshrink_decoder *hsd) {
  81:Core/Src/heatshrink_decoder.c ****     size_t buf_sz = 1 << HEATSHRINK_DECODER_WINDOW_BITS(hsd);
  82:Core/Src/heatshrink_decoder.c ****     size_t input_sz = HEATSHRINK_DECODER_INPUT_BUFFER_SIZE(hsd);
  83:Core/Src/heatshrink_decoder.c ****     memset(hsd->buffers, 0, buf_sz + input_sz);
  84:Core/Src/heatshrink_decoder.c ****     hsd->state = HSDS_TAG_BIT;
  85:Core/Src/heatshrink_decoder.c ****     hsd->input_size = 0;
  86:Core/Src/heatshrink_decoder.c ****     hsd->input_index = 0;
  87:Core/Src/heatshrink_decoder.c ****     hsd->bit_index = 0x00;
  88:Core/Src/heatshrink_decoder.c ****     hsd->current_byte = 0x00;
  89:Core/Src/heatshrink_decoder.c ****     hsd->output_count = 0;
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 3


  90:Core/Src/heatshrink_decoder.c ****     hsd->output_index = 0;
  91:Core/Src/heatshrink_decoder.c ****     hsd->head_index = 0;
  92:Core/Src/heatshrink_decoder.c **** }
  93:Core/Src/heatshrink_decoder.c **** 
  94:Core/Src/heatshrink_decoder.c **** /* Copy SIZE bytes into the decoder's input buffer, if it will fit. */
  95:Core/Src/heatshrink_decoder.c **** HSD_sink_res heatshrink_decoder_sink(heatshrink_decoder *hsd,
  96:Core/Src/heatshrink_decoder.c ****         uint8_t *in_buf, size_t size, size_t *input_size) {
  97:Core/Src/heatshrink_decoder.c ****     if ((hsd == NULL) || (in_buf == NULL) || (input_size == NULL)) {
  98:Core/Src/heatshrink_decoder.c ****         return HSDR_SINK_ERROR_NULL;
  99:Core/Src/heatshrink_decoder.c ****     }
 100:Core/Src/heatshrink_decoder.c **** 
 101:Core/Src/heatshrink_decoder.c ****     size_t rem = HEATSHRINK_DECODER_INPUT_BUFFER_SIZE(hsd) - hsd->input_size;
 102:Core/Src/heatshrink_decoder.c ****     if (rem == 0) {
 103:Core/Src/heatshrink_decoder.c ****         *input_size = 0;
 104:Core/Src/heatshrink_decoder.c ****         return HSDR_SINK_FULL;
 105:Core/Src/heatshrink_decoder.c ****     }
 106:Core/Src/heatshrink_decoder.c **** 
 107:Core/Src/heatshrink_decoder.c ****     size = rem < size ? rem : size;
 108:Core/Src/heatshrink_decoder.c ****     LOG("-- sinking %zd bytes\n", size);
 109:Core/Src/heatshrink_decoder.c ****     /* copy into input buffer (at head of buffers) */
 110:Core/Src/heatshrink_decoder.c ****     memcpy(&hsd->buffers[hsd->input_size], in_buf, size);
 111:Core/Src/heatshrink_decoder.c ****     hsd->input_size += size;
 112:Core/Src/heatshrink_decoder.c ****     *input_size = size;
 113:Core/Src/heatshrink_decoder.c ****     return HSDR_SINK_OK;
 114:Core/Src/heatshrink_decoder.c **** }
 115:Core/Src/heatshrink_decoder.c **** 
 116:Core/Src/heatshrink_decoder.c **** 
 117:Core/Src/heatshrink_decoder.c **** /*****************
 118:Core/Src/heatshrink_decoder.c ****  * Decompression *
 119:Core/Src/heatshrink_decoder.c ****  *****************/
 120:Core/Src/heatshrink_decoder.c **** 
 121:Core/Src/heatshrink_decoder.c **** #define BACKREF_COUNT_BITS(HSD) (HEATSHRINK_DECODER_LOOKAHEAD_BITS(HSD))
 122:Core/Src/heatshrink_decoder.c **** #define BACKREF_INDEX_BITS(HSD) (HEATSHRINK_DECODER_WINDOW_BITS(HSD))
 123:Core/Src/heatshrink_decoder.c **** 
 124:Core/Src/heatshrink_decoder.c **** // States
 125:Core/Src/heatshrink_decoder.c **** static HSD_state st_tag_bit(heatshrink_decoder *hsd);
 126:Core/Src/heatshrink_decoder.c **** static HSD_state st_yield_literal(heatshrink_decoder *hsd,
 127:Core/Src/heatshrink_decoder.c ****     output_info *oi);
 128:Core/Src/heatshrink_decoder.c **** static HSD_state st_backref_index_msb(heatshrink_decoder *hsd);
 129:Core/Src/heatshrink_decoder.c **** static HSD_state st_backref_index_lsb(heatshrink_decoder *hsd);
 130:Core/Src/heatshrink_decoder.c **** static HSD_state st_backref_count_msb(heatshrink_decoder *hsd);
 131:Core/Src/heatshrink_decoder.c **** static HSD_state st_backref_count_lsb(heatshrink_decoder *hsd);
 132:Core/Src/heatshrink_decoder.c **** static HSD_state st_yield_backref(heatshrink_decoder *hsd,
 133:Core/Src/heatshrink_decoder.c ****     output_info *oi);
 134:Core/Src/heatshrink_decoder.c **** 
 135:Core/Src/heatshrink_decoder.c **** HSD_poll_res heatshrink_decoder_poll(heatshrink_decoder *hsd,
 136:Core/Src/heatshrink_decoder.c ****         uint8_t *out_buf, size_t out_buf_size, size_t *output_size) {
 137:Core/Src/heatshrink_decoder.c ****     if ((hsd == NULL) || (out_buf == NULL) || (output_size == NULL)) {
 138:Core/Src/heatshrink_decoder.c ****         return HSDR_POLL_ERROR_NULL;
 139:Core/Src/heatshrink_decoder.c ****     }
 140:Core/Src/heatshrink_decoder.c ****     *output_size = 0;
 141:Core/Src/heatshrink_decoder.c **** 
 142:Core/Src/heatshrink_decoder.c ****     output_info oi;
 143:Core/Src/heatshrink_decoder.c ****     oi.buf = out_buf;
 144:Core/Src/heatshrink_decoder.c ****     oi.buf_size = out_buf_size;
 145:Core/Src/heatshrink_decoder.c ****     oi.output_size = output_size;
 146:Core/Src/heatshrink_decoder.c **** 
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 4


 147:Core/Src/heatshrink_decoder.c ****     while (1) {
 148:Core/Src/heatshrink_decoder.c ****         LOG("-- poll, state is %d (%s), input_size %d\n",
 149:Core/Src/heatshrink_decoder.c ****             hsd->state, state_names[hsd->state], hsd->input_size);
 150:Core/Src/heatshrink_decoder.c ****         uint8_t in_state = hsd->state;
 151:Core/Src/heatshrink_decoder.c ****         switch (in_state) {
 152:Core/Src/heatshrink_decoder.c ****         case HSDS_TAG_BIT:
 153:Core/Src/heatshrink_decoder.c ****             hsd->state = st_tag_bit(hsd);
 154:Core/Src/heatshrink_decoder.c ****             break;
 155:Core/Src/heatshrink_decoder.c ****         case HSDS_YIELD_LITERAL:
 156:Core/Src/heatshrink_decoder.c ****             hsd->state = st_yield_literal(hsd, &oi);
 157:Core/Src/heatshrink_decoder.c ****             break;
 158:Core/Src/heatshrink_decoder.c ****         case HSDS_BACKREF_INDEX_MSB:
 159:Core/Src/heatshrink_decoder.c ****             hsd->state = st_backref_index_msb(hsd);
 160:Core/Src/heatshrink_decoder.c ****             break;
 161:Core/Src/heatshrink_decoder.c ****         case HSDS_BACKREF_INDEX_LSB:
 162:Core/Src/heatshrink_decoder.c ****             hsd->state = st_backref_index_lsb(hsd);
 163:Core/Src/heatshrink_decoder.c ****             break;
 164:Core/Src/heatshrink_decoder.c ****         case HSDS_BACKREF_COUNT_MSB:
 165:Core/Src/heatshrink_decoder.c ****             hsd->state = st_backref_count_msb(hsd);
 166:Core/Src/heatshrink_decoder.c ****             break;
 167:Core/Src/heatshrink_decoder.c ****         case HSDS_BACKREF_COUNT_LSB:
 168:Core/Src/heatshrink_decoder.c ****             hsd->state = st_backref_count_lsb(hsd);
 169:Core/Src/heatshrink_decoder.c ****             break;
 170:Core/Src/heatshrink_decoder.c ****         case HSDS_YIELD_BACKREF:
 171:Core/Src/heatshrink_decoder.c ****             hsd->state = st_yield_backref(hsd, &oi);
 172:Core/Src/heatshrink_decoder.c ****             break;
 173:Core/Src/heatshrink_decoder.c ****         default:
 174:Core/Src/heatshrink_decoder.c ****             return HSDR_POLL_ERROR_UNKNOWN;
 175:Core/Src/heatshrink_decoder.c ****         }
 176:Core/Src/heatshrink_decoder.c ****         
 177:Core/Src/heatshrink_decoder.c ****         /* If the current state cannot advance, check if input or output
 178:Core/Src/heatshrink_decoder.c ****          * buffer are exhausted. */
 179:Core/Src/heatshrink_decoder.c ****         if (hsd->state == in_state) {
 180:Core/Src/heatshrink_decoder.c ****             if (*output_size == out_buf_size) { return HSDR_POLL_MORE; }
 181:Core/Src/heatshrink_decoder.c ****             return HSDR_POLL_EMPTY;
 182:Core/Src/heatshrink_decoder.c ****         }
 183:Core/Src/heatshrink_decoder.c ****     }
 184:Core/Src/heatshrink_decoder.c **** }
 185:Core/Src/heatshrink_decoder.c **** 
 186:Core/Src/heatshrink_decoder.c **** static HSD_state st_tag_bit(heatshrink_decoder *hsd) {
 187:Core/Src/heatshrink_decoder.c ****     uint32_t bits = get_bits(hsd, 1);  // get tag bit
 188:Core/Src/heatshrink_decoder.c ****     if (bits == NO_BITS) {
 189:Core/Src/heatshrink_decoder.c ****         return HSDS_TAG_BIT;
 190:Core/Src/heatshrink_decoder.c ****     } else if (bits) {
 191:Core/Src/heatshrink_decoder.c ****         return HSDS_YIELD_LITERAL;
 192:Core/Src/heatshrink_decoder.c ****     } else if (HEATSHRINK_DECODER_WINDOW_BITS(hsd) > 8) {
 193:Core/Src/heatshrink_decoder.c ****         return HSDS_BACKREF_INDEX_MSB;
 194:Core/Src/heatshrink_decoder.c ****     } else {
 195:Core/Src/heatshrink_decoder.c ****         hsd->output_index = 0;
 196:Core/Src/heatshrink_decoder.c ****         return HSDS_BACKREF_INDEX_LSB;
 197:Core/Src/heatshrink_decoder.c ****     }
 198:Core/Src/heatshrink_decoder.c **** }
 199:Core/Src/heatshrink_decoder.c **** 
 200:Core/Src/heatshrink_decoder.c **** static HSD_state st_yield_literal(heatshrink_decoder *hsd,
 201:Core/Src/heatshrink_decoder.c ****         output_info *oi) {
 202:Core/Src/heatshrink_decoder.c ****     /* Emit a repeated section from the window buffer, and add it (again)
 203:Core/Src/heatshrink_decoder.c ****      * to the window buffer. (Note that the repetition can include
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 5


 204:Core/Src/heatshrink_decoder.c ****      * itself.)*/
 205:Core/Src/heatshrink_decoder.c ****     if (*oi->output_size < oi->buf_size) {
 206:Core/Src/heatshrink_decoder.c ****         uint16_t byte = get_bits(hsd, 8);
 207:Core/Src/heatshrink_decoder.c ****         if (byte == NO_BITS) { return HSDS_YIELD_LITERAL; } /* out of input */
 208:Core/Src/heatshrink_decoder.c ****         uint8_t *buf = &hsd->buffers[HEATSHRINK_DECODER_INPUT_BUFFER_SIZE(hsd)];
 209:Core/Src/heatshrink_decoder.c ****         uint16_t mask = (1 << HEATSHRINK_DECODER_WINDOW_BITS(hsd))  - 1;
 210:Core/Src/heatshrink_decoder.c ****         uint8_t c = byte & 0xFF;
 211:Core/Src/heatshrink_decoder.c ****         LOG("-- emitting literal byte 0x%02x ('%c')\n", c, isprint(c) ? c : '.');
 212:Core/Src/heatshrink_decoder.c ****         buf[hsd->head_index++ & mask] = c;
 213:Core/Src/heatshrink_decoder.c ****         push_byte(hsd, oi, c);
 214:Core/Src/heatshrink_decoder.c ****         return HSDS_TAG_BIT;
 215:Core/Src/heatshrink_decoder.c ****     } else {
 216:Core/Src/heatshrink_decoder.c ****         return HSDS_YIELD_LITERAL;
 217:Core/Src/heatshrink_decoder.c ****     }
 218:Core/Src/heatshrink_decoder.c **** }
 219:Core/Src/heatshrink_decoder.c **** 
 220:Core/Src/heatshrink_decoder.c **** static HSD_state st_backref_index_msb(heatshrink_decoder *hsd) {
 221:Core/Src/heatshrink_decoder.c ****     uint8_t bit_ct = BACKREF_INDEX_BITS(hsd);
 222:Core/Src/heatshrink_decoder.c ****     ASSERT(bit_ct > 8);
 223:Core/Src/heatshrink_decoder.c ****     uint16_t bits = get_bits(hsd, bit_ct - 8);
 224:Core/Src/heatshrink_decoder.c ****     LOG("-- backref index (msb), got 0x%04x (+1)\n", bits);
 225:Core/Src/heatshrink_decoder.c ****     if (bits == NO_BITS) { return HSDS_BACKREF_INDEX_MSB; }
 226:Core/Src/heatshrink_decoder.c ****     hsd->output_index = bits << 8;
 227:Core/Src/heatshrink_decoder.c ****     return HSDS_BACKREF_INDEX_LSB;
 228:Core/Src/heatshrink_decoder.c **** }
 229:Core/Src/heatshrink_decoder.c **** 
 230:Core/Src/heatshrink_decoder.c **** static HSD_state st_backref_index_lsb(heatshrink_decoder *hsd) {
 231:Core/Src/heatshrink_decoder.c ****     uint8_t bit_ct = BACKREF_INDEX_BITS(hsd);
 232:Core/Src/heatshrink_decoder.c ****     uint16_t bits = get_bits(hsd, bit_ct < 8 ? bit_ct : 8);
 233:Core/Src/heatshrink_decoder.c ****     LOG("-- backref index (lsb), got 0x%04x (+1)\n", bits);
 234:Core/Src/heatshrink_decoder.c ****     if (bits == NO_BITS) { return HSDS_BACKREF_INDEX_LSB; }
 235:Core/Src/heatshrink_decoder.c ****     hsd->output_index |= bits;
 236:Core/Src/heatshrink_decoder.c ****     hsd->output_index++;
 237:Core/Src/heatshrink_decoder.c ****     uint8_t br_bit_ct = BACKREF_COUNT_BITS(hsd);
 238:Core/Src/heatshrink_decoder.c ****     hsd->output_count = 0;
 239:Core/Src/heatshrink_decoder.c ****     return (br_bit_ct > 8) ? HSDS_BACKREF_COUNT_MSB : HSDS_BACKREF_COUNT_LSB;
 240:Core/Src/heatshrink_decoder.c **** }
 241:Core/Src/heatshrink_decoder.c **** 
 242:Core/Src/heatshrink_decoder.c **** static HSD_state st_backref_count_msb(heatshrink_decoder *hsd) {
 243:Core/Src/heatshrink_decoder.c ****     uint8_t br_bit_ct = BACKREF_COUNT_BITS(hsd);
 244:Core/Src/heatshrink_decoder.c ****     ASSERT(br_bit_ct > 8);
 245:Core/Src/heatshrink_decoder.c ****     uint16_t bits = get_bits(hsd, br_bit_ct - 8);
 246:Core/Src/heatshrink_decoder.c ****     LOG("-- backref count (msb), got 0x%04x (+1)\n", bits);
 247:Core/Src/heatshrink_decoder.c ****     if (bits == NO_BITS) { return HSDS_BACKREF_COUNT_MSB; }
 248:Core/Src/heatshrink_decoder.c ****     hsd->output_count = bits << 8;
 249:Core/Src/heatshrink_decoder.c ****     return HSDS_BACKREF_COUNT_LSB;
 250:Core/Src/heatshrink_decoder.c **** }
 251:Core/Src/heatshrink_decoder.c **** 
 252:Core/Src/heatshrink_decoder.c **** static HSD_state st_backref_count_lsb(heatshrink_decoder *hsd) {
 253:Core/Src/heatshrink_decoder.c ****     uint8_t br_bit_ct = BACKREF_COUNT_BITS(hsd);
 254:Core/Src/heatshrink_decoder.c ****     uint16_t bits = get_bits(hsd, br_bit_ct < 8 ? br_bit_ct : 8);
 255:Core/Src/heatshrink_decoder.c ****     LOG("-- backref count (lsb), got 0x%04x (+1)\n", bits);
 256:Core/Src/heatshrink_decoder.c ****     if (bits == NO_BITS) { return HSDS_BACKREF_COUNT_LSB; }
 257:Core/Src/heatshrink_decoder.c ****     hsd->output_count |= bits;
 258:Core/Src/heatshrink_decoder.c ****     hsd->output_count++;
 259:Core/Src/heatshrink_decoder.c ****     return HSDS_YIELD_BACKREF;
 260:Core/Src/heatshrink_decoder.c **** }
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 6


 261:Core/Src/heatshrink_decoder.c **** 
 262:Core/Src/heatshrink_decoder.c **** static HSD_state st_yield_backref(heatshrink_decoder *hsd,
 263:Core/Src/heatshrink_decoder.c ****         output_info *oi) {
 264:Core/Src/heatshrink_decoder.c ****     size_t count = oi->buf_size - *oi->output_size;
 265:Core/Src/heatshrink_decoder.c ****     if (count > 0) {
 266:Core/Src/heatshrink_decoder.c ****         size_t i = 0;
 267:Core/Src/heatshrink_decoder.c ****         if (hsd->output_count < count) count = hsd->output_count;
 268:Core/Src/heatshrink_decoder.c ****         uint8_t *buf = &hsd->buffers[HEATSHRINK_DECODER_INPUT_BUFFER_SIZE(hsd)];
 269:Core/Src/heatshrink_decoder.c ****         uint16_t mask = (1 << HEATSHRINK_DECODER_WINDOW_BITS(hsd)) - 1;
 270:Core/Src/heatshrink_decoder.c ****         uint16_t neg_offset = hsd->output_index;
 271:Core/Src/heatshrink_decoder.c ****         LOG("-- emitting %zu bytes from -%u bytes back\n", count, neg_offset);
 272:Core/Src/heatshrink_decoder.c ****         ASSERT(neg_offset <= mask + 1);
 273:Core/Src/heatshrink_decoder.c ****         ASSERT(count <= (size_t)(1 << BACKREF_COUNT_BITS(hsd)));
 274:Core/Src/heatshrink_decoder.c **** 
 275:Core/Src/heatshrink_decoder.c ****         for (i=0; i<count; i++) {
 276:Core/Src/heatshrink_decoder.c ****             uint8_t c = buf[(hsd->head_index - neg_offset) & mask];
 277:Core/Src/heatshrink_decoder.c ****             push_byte(hsd, oi, c);
 278:Core/Src/heatshrink_decoder.c ****             buf[hsd->head_index & mask] = c;
 279:Core/Src/heatshrink_decoder.c ****             hsd->head_index++;
 280:Core/Src/heatshrink_decoder.c ****             LOG("  -- ++ 0x%02x\n", c);
 281:Core/Src/heatshrink_decoder.c ****         }
 282:Core/Src/heatshrink_decoder.c ****         hsd->output_count -= count;
 283:Core/Src/heatshrink_decoder.c ****         if (hsd->output_count == 0) { return HSDS_TAG_BIT; }
 284:Core/Src/heatshrink_decoder.c ****     }
 285:Core/Src/heatshrink_decoder.c ****     return HSDS_YIELD_BACKREF;
 286:Core/Src/heatshrink_decoder.c **** }
 287:Core/Src/heatshrink_decoder.c **** 
 288:Core/Src/heatshrink_decoder.c **** /* Get the next COUNT bits from the input buffer, saving incremental progress.
 289:Core/Src/heatshrink_decoder.c ****  * Returns NO_BITS on end of input, or if more than 15 bits are requested. */
 290:Core/Src/heatshrink_decoder.c **** static uint16_t get_bits(heatshrink_decoder *hsd, uint8_t count) {
  27              		.loc 1 290 66 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		.loc 1 290 66 is_stmt 0 view .LVU1
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  38 0002 0300     		movs	r3, r0
 291:Core/Src/heatshrink_decoder.c ****     uint16_t accumulator = 0;
  39              		.loc 1 291 5 is_stmt 1 view .LVU2
  40              	.LVL1:
 292:Core/Src/heatshrink_decoder.c ****     int i = 0;
  41              		.loc 1 292 5 view .LVU3
 293:Core/Src/heatshrink_decoder.c ****     if (count > 15) { return NO_BITS; }
  42              		.loc 1 293 5 view .LVU4
  43              		.loc 1 293 8 is_stmt 0 view .LVU5
  44 0004 0F29     		cmp	r1, #15
  45 0006 30D8     		bhi	.L9
 294:Core/Src/heatshrink_decoder.c ****     LOG("-- popping %u bit(s)\n", count);
  46              		.loc 1 294 41 is_stmt 1 view .LVU6
 295:Core/Src/heatshrink_decoder.c **** 
 296:Core/Src/heatshrink_decoder.c ****     /* If we aren't able to get COUNT bits, suspend immediately, because we
 297:Core/Src/heatshrink_decoder.c ****      * don't track how many bits of COUNT we've accumulated before suspend. */
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 7


 298:Core/Src/heatshrink_decoder.c ****     if (hsd->input_size == 0) {
  47              		.loc 1 298 5 view .LVU7
  48              		.loc 1 298 12 is_stmt 0 view .LVU8
  49 0008 0088     		ldrh	r0, [r0]
  50              	.LVL2:
  51              		.loc 1 298 8 view .LVU9
  52 000a 0028     		cmp	r0, #0
  53 000c 2AD1     		bne	.L10
 299:Core/Src/heatshrink_decoder.c ****         if (hsd->bit_index < (1 << (count - 1))) { return NO_BITS; }
  54              		.loc 1 299 9 is_stmt 1 view .LVU10
  55              		.loc 1 299 16 is_stmt 0 view .LVU11
  56 000e 1C7B     		ldrb	r4, [r3, #12]
  57              		.loc 1 299 43 view .LVU12
  58 0010 4D1E     		subs	r5, r1, #1
  59              		.loc 1 299 33 view .LVU13
  60 0012 0122     		movs	r2, #1
  61 0014 AA40     		lsls	r2, r2, r5
  62              		.loc 1 299 12 view .LVU14
  63 0016 9442     		cmp	r4, r2
  64 0018 29DB     		blt	.L11
  65 001a 0025     		movs	r5, #0
  66 001c 0DE0     		b	.L7
  67              	.LVL3:
  68              	.L5:
 300:Core/Src/heatshrink_decoder.c ****     }
 301:Core/Src/heatshrink_decoder.c **** 
 302:Core/Src/heatshrink_decoder.c ****     for (i = 0; i < count; i++) {
 303:Core/Src/heatshrink_decoder.c ****         if (hsd->bit_index == 0x00) {
 304:Core/Src/heatshrink_decoder.c ****             if (hsd->input_size == 0) {
 305:Core/Src/heatshrink_decoder.c ****                 LOG("  -- out of bits, suspending w/ accumulator of %u (0x%02x)\n",
 306:Core/Src/heatshrink_decoder.c ****                     accumulator, accumulator);
 307:Core/Src/heatshrink_decoder.c ****                 return NO_BITS;
 308:Core/Src/heatshrink_decoder.c ****             }
 309:Core/Src/heatshrink_decoder.c ****             hsd->current_byte = hsd->buffers[hsd->input_index++];
 310:Core/Src/heatshrink_decoder.c ****             LOG("  -- pulled byte 0x%02x\n", hsd->current_byte);
 311:Core/Src/heatshrink_decoder.c ****             if (hsd->input_index == hsd->input_size) {
 312:Core/Src/heatshrink_decoder.c ****                 hsd->input_index = 0; /* input is exhausted */
 313:Core/Src/heatshrink_decoder.c ****                 hsd->input_size = 0;
 314:Core/Src/heatshrink_decoder.c ****             }
 315:Core/Src/heatshrink_decoder.c ****             hsd->bit_index = 0x80;
  69              		.loc 1 315 13 is_stmt 1 view .LVU15
  70              		.loc 1 315 28 is_stmt 0 view .LVU16
  71 001e 8022     		movs	r2, #128
  72 0020 1A73     		strb	r2, [r3, #12]
  73              	.L4:
 316:Core/Src/heatshrink_decoder.c ****         }
 317:Core/Src/heatshrink_decoder.c ****         accumulator <<= 1;
  74              		.loc 1 317 9 is_stmt 1 view .LVU17
  75              		.loc 1 317 21 is_stmt 0 view .LVU18
  76 0022 4000     		lsls	r0, r0, #1
  77              	.LVL4:
  78              		.loc 1 317 21 view .LVU19
  79 0024 80B2     		uxth	r0, r0
  80              	.LVL5:
 318:Core/Src/heatshrink_decoder.c ****         if (hsd->current_byte & hsd->bit_index) {
  81              		.loc 1 318 9 is_stmt 1 view .LVU20
  82              		.loc 1 318 16 is_stmt 0 view .LVU21
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 8


  83 0026 DC7A     		ldrb	r4, [r3, #11]
  84              		.loc 1 318 36 view .LVU22
  85 0028 1A7B     		ldrb	r2, [r3, #12]
  86              		.loc 1 318 12 view .LVU23
  87 002a 2242     		tst	r2, r4
  88 002c 02D0     		beq	.L6
 319:Core/Src/heatshrink_decoder.c ****             accumulator |= 0x01;
  89              		.loc 1 319 13 is_stmt 1 view .LVU24
  90              		.loc 1 319 25 is_stmt 0 view .LVU25
  91 002e 0124     		movs	r4, #1
  92 0030 2043     		orrs	r0, r4
  93              	.LVL6:
  94              		.loc 1 319 25 view .LVU26
  95 0032 80B2     		uxth	r0, r0
  96              	.LVL7:
 320:Core/Src/heatshrink_decoder.c ****             if (0) {
  97              		.loc 1 320 13 is_stmt 1 view .LVU27
 321:Core/Src/heatshrink_decoder.c ****                 LOG("  -- got 1, accumulator 0x%04x, bit_index 0x%02x\n",
 322:Core/Src/heatshrink_decoder.c ****                 accumulator, hsd->bit_index);
  98              		.loc 1 322 45 view .LVU28
  99              	.L6:
 323:Core/Src/heatshrink_decoder.c ****             }
 324:Core/Src/heatshrink_decoder.c ****         } else {
 325:Core/Src/heatshrink_decoder.c ****             if (0) {
 326:Core/Src/heatshrink_decoder.c ****                 LOG("  -- got 0, accumulator 0x%04x, bit_index 0x%02x\n",
 327:Core/Src/heatshrink_decoder.c ****                 accumulator, hsd->bit_index);
 100              		.loc 1 327 45 discriminator 2 view .LVU29
 328:Core/Src/heatshrink_decoder.c ****             }
 329:Core/Src/heatshrink_decoder.c ****         }
 330:Core/Src/heatshrink_decoder.c ****         hsd->bit_index >>= 1;
 101              		.loc 1 330 9 discriminator 2 view .LVU30
 102              		.loc 1 330 24 is_stmt 0 discriminator 2 view .LVU31
 103 0034 5208     		lsrs	r2, r2, #1
 104 0036 1A73     		strb	r2, [r3, #12]
 302:Core/Src/heatshrink_decoder.c ****         if (hsd->bit_index == 0x00) {
 105              		.loc 1 302 28 is_stmt 1 discriminator 2 view .LVU32
 302:Core/Src/heatshrink_decoder.c ****         if (hsd->bit_index == 0x00) {
 106              		.loc 1 302 29 is_stmt 0 discriminator 2 view .LVU33
 107 0038 0135     		adds	r5, r5, #1
 108              	.LVL8:
 109              	.L7:
 302:Core/Src/heatshrink_decoder.c ****         if (hsd->bit_index == 0x00) {
 110              		.loc 1 302 17 is_stmt 1 discriminator 1 view .LVU34
 302:Core/Src/heatshrink_decoder.c ****         if (hsd->bit_index == 0x00) {
 111              		.loc 1 302 5 is_stmt 0 discriminator 1 view .LVU35
 112 003a A942     		cmp	r1, r5
 113 003c 1ADD     		ble	.L2
 303:Core/Src/heatshrink_decoder.c ****             if (hsd->input_size == 0) {
 114              		.loc 1 303 9 is_stmt 1 view .LVU36
 303:Core/Src/heatshrink_decoder.c ****             if (hsd->input_size == 0) {
 115              		.loc 1 303 16 is_stmt 0 view .LVU37
 116 003e 1A7B     		ldrb	r2, [r3, #12]
 303:Core/Src/heatshrink_decoder.c ****             if (hsd->input_size == 0) {
 117              		.loc 1 303 12 view .LVU38
 118 0040 002A     		cmp	r2, #0
 119 0042 EED1     		bne	.L4
 304:Core/Src/heatshrink_decoder.c ****                 LOG("  -- out of bits, suspending w/ accumulator of %u (0x%02x)\n",
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 9


 120              		.loc 1 304 13 is_stmt 1 view .LVU39
 304:Core/Src/heatshrink_decoder.c ****                 LOG("  -- out of bits, suspending w/ accumulator of %u (0x%02x)\n",
 121              		.loc 1 304 20 is_stmt 0 view .LVU40
 122 0044 1E88     		ldrh	r6, [r3]
 304:Core/Src/heatshrink_decoder.c ****                 LOG("  -- out of bits, suspending w/ accumulator of %u (0x%02x)\n",
 123              		.loc 1 304 16 view .LVU41
 124 0046 002E     		cmp	r6, #0
 125 0048 13D0     		beq	.L12
 309:Core/Src/heatshrink_decoder.c ****             LOG("  -- pulled byte 0x%02x\n", hsd->current_byte);
 126              		.loc 1 309 13 is_stmt 1 view .LVU42
 309:Core/Src/heatshrink_decoder.c ****             LOG("  -- pulled byte 0x%02x\n", hsd->current_byte);
 127              		.loc 1 309 49 is_stmt 0 view .LVU43
 128 004a 5C88     		ldrh	r4, [r3, #2]
 309:Core/Src/heatshrink_decoder.c ****             LOG("  -- pulled byte 0x%02x\n", hsd->current_byte);
 129              		.loc 1 309 62 view .LVU44
 130 004c 621C     		adds	r2, r4, #1
 131 004e 92B2     		uxth	r2, r2
 132 0050 5A80     		strh	r2, [r3, #2]
 309:Core/Src/heatshrink_decoder.c ****             LOG("  -- pulled byte 0x%02x\n", hsd->current_byte);
 133              		.loc 1 309 45 view .LVU45
 134 0052 1C19     		adds	r4, r3, r4
 135 0054 647B     		ldrb	r4, [r4, #13]
 309:Core/Src/heatshrink_decoder.c ****             LOG("  -- pulled byte 0x%02x\n", hsd->current_byte);
 136              		.loc 1 309 31 view .LVU46
 137 0056 DC72     		strb	r4, [r3, #11]
 310:Core/Src/heatshrink_decoder.c ****             if (hsd->input_index == hsd->input_size) {
 138              		.loc 1 310 64 is_stmt 1 view .LVU47
 311:Core/Src/heatshrink_decoder.c ****                 hsd->input_index = 0; /* input is exhausted */
 139              		.loc 1 311 13 view .LVU48
 311:Core/Src/heatshrink_decoder.c ****                 hsd->input_index = 0; /* input is exhausted */
 140              		.loc 1 311 16 is_stmt 0 view .LVU49
 141 0058 9642     		cmp	r6, r2
 142 005a E0D1     		bne	.L5
 312:Core/Src/heatshrink_decoder.c ****                 hsd->input_size = 0;
 143              		.loc 1 312 17 is_stmt 1 view .LVU50
 312:Core/Src/heatshrink_decoder.c ****                 hsd->input_size = 0;
 144              		.loc 1 312 34 is_stmt 0 view .LVU51
 145 005c 0022     		movs	r2, #0
 146 005e 5A80     		strh	r2, [r3, #2]
 313:Core/Src/heatshrink_decoder.c ****             }
 147              		.loc 1 313 17 is_stmt 1 view .LVU52
 313:Core/Src/heatshrink_decoder.c ****             }
 148              		.loc 1 313 33 is_stmt 0 view .LVU53
 149 0060 1A80     		strh	r2, [r3]
 150 0062 DCE7     		b	.L5
 151              	.LVL9:
 152              	.L10:
 313:Core/Src/heatshrink_decoder.c ****             }
 153              		.loc 1 313 33 view .LVU54
 154 0064 0025     		movs	r5, #0
 155 0066 0020     		movs	r0, #0
 156 0068 E7E7     		b	.L7
 157              	.LVL10:
 158              	.L9:
 293:Core/Src/heatshrink_decoder.c ****     LOG("-- popping %u bit(s)\n", count);
 159              		.loc 1 293 30 view .LVU55
 160 006a 0348     		ldr	r0, .L13
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 10


 161              	.LVL11:
 293:Core/Src/heatshrink_decoder.c ****     LOG("-- popping %u bit(s)\n", count);
 162              		.loc 1 293 30 view .LVU56
 163 006c 02E0     		b	.L2
 164              	.L11:
 299:Core/Src/heatshrink_decoder.c ****     }
 165              		.loc 1 299 59 view .LVU57
 166 006e 0248     		ldr	r0, .L13
 167 0070 00E0     		b	.L2
 168              	.LVL12:
 169              	.L12:
 307:Core/Src/heatshrink_decoder.c ****             }
 170              		.loc 1 307 24 view .LVU58
 171 0072 0148     		ldr	r0, .L13
 172              	.LVL13:
 173              	.L2:
 331:Core/Src/heatshrink_decoder.c ****     }
 332:Core/Src/heatshrink_decoder.c **** 
 333:Core/Src/heatshrink_decoder.c ****     if (count > 1) { LOG("  -- accumulated %08x\n", accumulator); }
 334:Core/Src/heatshrink_decoder.c ****     return accumulator;
 335:Core/Src/heatshrink_decoder.c **** }
 174              		.loc 1 335 1 view .LVU59
 175              		@ sp needed
 176 0074 70BD     		pop	{r4, r5, r6, pc}
 177              	.L14:
 178 0076 C046     		.align	2
 179              	.L13:
 180 0078 FFFF0000 		.word	65535
 181              		.cfi_endproc
 182              	.LFE10:
 184              		.section	.text.st_tag_bit,"ax",%progbits
 185              		.align	1
 186              		.syntax unified
 187              		.code	16
 188              		.thumb_func
 189              		.fpu softvfp
 191              	st_tag_bit:
 192              	.LVL14:
 193              	.LFB3:
 186:Core/Src/heatshrink_decoder.c ****     uint32_t bits = get_bits(hsd, 1);  // get tag bit
 194              		.loc 1 186 54 is_stmt 1 view -0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 186:Core/Src/heatshrink_decoder.c ****     uint32_t bits = get_bits(hsd, 1);  // get tag bit
 198              		.loc 1 186 54 is_stmt 0 view .LVU61
 199 0000 10B5     		push	{r4, lr}
 200              		.cfi_def_cfa_offset 8
 201              		.cfi_offset 4, -8
 202              		.cfi_offset 14, -4
 203 0002 0400     		movs	r4, r0
 187:Core/Src/heatshrink_decoder.c ****     if (bits == NO_BITS) {
 204              		.loc 1 187 5 is_stmt 1 view .LVU62
 187:Core/Src/heatshrink_decoder.c ****     if (bits == NO_BITS) {
 205              		.loc 1 187 21 is_stmt 0 view .LVU63
 206 0004 0121     		movs	r1, #1
 207 0006 FFF7FEFF 		bl	get_bits
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 11


 208              	.LVL15:
 188:Core/Src/heatshrink_decoder.c ****         return HSDS_TAG_BIT;
 209              		.loc 1 188 5 is_stmt 1 view .LVU64
 188:Core/Src/heatshrink_decoder.c ****         return HSDS_TAG_BIT;
 210              		.loc 1 188 8 is_stmt 0 view .LVU65
 211 000a 064B     		ldr	r3, .L20
 212 000c 9842     		cmp	r0, r3
 213 000e 07D0     		beq	.L17
 190:Core/Src/heatshrink_decoder.c ****         return HSDS_YIELD_LITERAL;
 214              		.loc 1 190 12 is_stmt 1 view .LVU66
 190:Core/Src/heatshrink_decoder.c ****         return HSDS_YIELD_LITERAL;
 215              		.loc 1 190 15 is_stmt 0 view .LVU67
 216 0010 0028     		cmp	r0, #0
 217 0012 01D0     		beq	.L19
 191:Core/Src/heatshrink_decoder.c ****     } else if (HEATSHRINK_DECODER_WINDOW_BITS(hsd) > 8) {
 218              		.loc 1 191 16 view .LVU68
 219 0014 0120     		movs	r0, #1
 220              	.LVL16:
 221              	.L16:
 198:Core/Src/heatshrink_decoder.c **** 
 222              		.loc 1 198 1 view .LVU69
 223              		@ sp needed
 224              	.LVL17:
 198:Core/Src/heatshrink_decoder.c **** 
 225              		.loc 1 198 1 view .LVU70
 226 0016 10BD     		pop	{r4, pc}
 227              	.LVL18:
 228              	.L19:
 192:Core/Src/heatshrink_decoder.c ****         return HSDS_BACKREF_INDEX_MSB;
 229              		.loc 1 192 12 is_stmt 1 view .LVU71
 195:Core/Src/heatshrink_decoder.c ****         return HSDS_BACKREF_INDEX_LSB;
 230              		.loc 1 195 9 view .LVU72
 195:Core/Src/heatshrink_decoder.c ****         return HSDS_BACKREF_INDEX_LSB;
 231              		.loc 1 195 27 is_stmt 0 view .LVU73
 232 0018 0023     		movs	r3, #0
 233 001a E380     		strh	r3, [r4, #6]
 196:Core/Src/heatshrink_decoder.c ****     }
 234              		.loc 1 196 9 is_stmt 1 view .LVU74
 196:Core/Src/heatshrink_decoder.c ****     }
 235              		.loc 1 196 16 is_stmt 0 view .LVU75
 236 001c 0330     		adds	r0, r0, #3
 237              	.LVL19:
 196:Core/Src/heatshrink_decoder.c ****     }
 238              		.loc 1 196 16 view .LVU76
 239 001e FAE7     		b	.L16
 240              	.LVL20:
 241              	.L17:
 189:Core/Src/heatshrink_decoder.c ****     } else if (bits) {
 242              		.loc 1 189 16 view .LVU77
 243 0020 0020     		movs	r0, #0
 244              	.LVL21:
 189:Core/Src/heatshrink_decoder.c ****     } else if (bits) {
 245              		.loc 1 189 16 view .LVU78
 246 0022 F8E7     		b	.L16
 247              	.L21:
 248              		.align	2
 249              	.L20:
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 12


 250 0024 FFFF0000 		.word	65535
 251              		.cfi_endproc
 252              	.LFE3:
 254              		.section	.text.st_backref_index_msb,"ax",%progbits
 255              		.align	1
 256              		.syntax unified
 257              		.code	16
 258              		.thumb_func
 259              		.fpu softvfp
 261              	st_backref_index_msb:
 262              	.LVL22:
 263              	.LFB5:
 220:Core/Src/heatshrink_decoder.c ****     uint8_t bit_ct = BACKREF_INDEX_BITS(hsd);
 264              		.loc 1 220 64 is_stmt 1 view -0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 220:Core/Src/heatshrink_decoder.c ****     uint8_t bit_ct = BACKREF_INDEX_BITS(hsd);
 268              		.loc 1 220 64 is_stmt 0 view .LVU80
 269 0000 10B5     		push	{r4, lr}
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 4, -8
 272              		.cfi_offset 14, -4
 273 0002 0400     		movs	r4, r0
 221:Core/Src/heatshrink_decoder.c ****     ASSERT(bit_ct > 8);
 274              		.loc 1 221 5 is_stmt 1 view .LVU81
 275              	.LVL23:
 222:Core/Src/heatshrink_decoder.c ****     uint16_t bits = get_bits(hsd, bit_ct - 8);
 276              		.loc 1 222 23 view .LVU82
 223:Core/Src/heatshrink_decoder.c ****     LOG("-- backref index (msb), got 0x%04x (+1)\n", bits);
 277              		.loc 1 223 5 view .LVU83
 223:Core/Src/heatshrink_decoder.c ****     LOG("-- backref index (msb), got 0x%04x (+1)\n", bits);
 278              		.loc 1 223 21 is_stmt 0 view .LVU84
 279 0004 0021     		movs	r1, #0
 280 0006 FFF7FEFF 		bl	get_bits
 281              	.LVL24:
 224:Core/Src/heatshrink_decoder.c ****     if (bits == NO_BITS) { return HSDS_BACKREF_INDEX_MSB; }
 282              		.loc 1 224 59 is_stmt 1 view .LVU85
 225:Core/Src/heatshrink_decoder.c ****     hsd->output_index = bits << 8;
 283              		.loc 1 225 5 view .LVU86
 225:Core/Src/heatshrink_decoder.c ****     hsd->output_index = bits << 8;
 284              		.loc 1 225 8 is_stmt 0 view .LVU87
 285 000a 044B     		ldr	r3, .L25
 286 000c 9842     		cmp	r0, r3
 287 000e 03D0     		beq	.L24
 226:Core/Src/heatshrink_decoder.c ****     return HSDS_BACKREF_INDEX_LSB;
 288              		.loc 1 226 5 is_stmt 1 view .LVU88
 226:Core/Src/heatshrink_decoder.c ****     return HSDS_BACKREF_INDEX_LSB;
 289              		.loc 1 226 30 is_stmt 0 view .LVU89
 290 0010 0002     		lsls	r0, r0, #8
 291              	.LVL25:
 226:Core/Src/heatshrink_decoder.c ****     return HSDS_BACKREF_INDEX_LSB;
 292              		.loc 1 226 23 view .LVU90
 293 0012 E080     		strh	r0, [r4, #6]
 227:Core/Src/heatshrink_decoder.c **** }
 294              		.loc 1 227 5 is_stmt 1 view .LVU91
 227:Core/Src/heatshrink_decoder.c **** }
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 13


 295              		.loc 1 227 12 is_stmt 0 view .LVU92
 296 0014 0320     		movs	r0, #3
 297              	.L23:
 228:Core/Src/heatshrink_decoder.c **** 
 298              		.loc 1 228 1 view .LVU93
 299              		@ sp needed
 300              	.LVL26:
 228:Core/Src/heatshrink_decoder.c **** 
 301              		.loc 1 228 1 view .LVU94
 302 0016 10BD     		pop	{r4, pc}
 303              	.LVL27:
 304              	.L24:
 225:Core/Src/heatshrink_decoder.c ****     hsd->output_index = bits << 8;
 305              		.loc 1 225 35 view .LVU95
 306 0018 0220     		movs	r0, #2
 307              	.LVL28:
 225:Core/Src/heatshrink_decoder.c ****     hsd->output_index = bits << 8;
 308              		.loc 1 225 35 view .LVU96
 309 001a FCE7     		b	.L23
 310              	.L26:
 311              		.align	2
 312              	.L25:
 313 001c FFFF0000 		.word	65535
 314              		.cfi_endproc
 315              	.LFE5:
 317              		.section	.text.st_backref_index_lsb,"ax",%progbits
 318              		.align	1
 319              		.syntax unified
 320              		.code	16
 321              		.thumb_func
 322              		.fpu softvfp
 324              	st_backref_index_lsb:
 325              	.LVL29:
 326              	.LFB6:
 230:Core/Src/heatshrink_decoder.c ****     uint8_t bit_ct = BACKREF_INDEX_BITS(hsd);
 327              		.loc 1 230 64 is_stmt 1 view -0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 230:Core/Src/heatshrink_decoder.c ****     uint8_t bit_ct = BACKREF_INDEX_BITS(hsd);
 331              		.loc 1 230 64 is_stmt 0 view .LVU98
 332 0000 10B5     		push	{r4, lr}
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 4, -8
 335              		.cfi_offset 14, -4
 336 0002 0400     		movs	r4, r0
 231:Core/Src/heatshrink_decoder.c ****     uint16_t bits = get_bits(hsd, bit_ct < 8 ? bit_ct : 8);
 337              		.loc 1 231 5 is_stmt 1 view .LVU99
 338              	.LVL30:
 232:Core/Src/heatshrink_decoder.c ****     LOG("-- backref index (lsb), got 0x%04x (+1)\n", bits);
 339              		.loc 1 232 5 view .LVU100
 232:Core/Src/heatshrink_decoder.c ****     LOG("-- backref index (lsb), got 0x%04x (+1)\n", bits);
 340              		.loc 1 232 21 is_stmt 0 view .LVU101
 341 0004 0821     		movs	r1, #8
 342 0006 FFF7FEFF 		bl	get_bits
 343              	.LVL31:
 233:Core/Src/heatshrink_decoder.c ****     if (bits == NO_BITS) { return HSDS_BACKREF_INDEX_LSB; }
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 14


 344              		.loc 1 233 59 is_stmt 1 view .LVU102
 234:Core/Src/heatshrink_decoder.c ****     hsd->output_index |= bits;
 345              		.loc 1 234 5 view .LVU103
 234:Core/Src/heatshrink_decoder.c ****     hsd->output_index |= bits;
 346              		.loc 1 234 8 is_stmt 0 view .LVU104
 347 000a 074B     		ldr	r3, .L30
 348 000c 9842     		cmp	r0, r3
 349 000e 09D0     		beq	.L29
 235:Core/Src/heatshrink_decoder.c ****     hsd->output_index++;
 350              		.loc 1 235 5 is_stmt 1 view .LVU105
 235:Core/Src/heatshrink_decoder.c ****     hsd->output_index++;
 351              		.loc 1 235 23 is_stmt 0 view .LVU106
 352 0010 E388     		ldrh	r3, [r4, #6]
 353 0012 0343     		orrs	r3, r0
 354 0014 9BB2     		uxth	r3, r3
 355 0016 E380     		strh	r3, [r4, #6]
 236:Core/Src/heatshrink_decoder.c ****     uint8_t br_bit_ct = BACKREF_COUNT_BITS(hsd);
 356              		.loc 1 236 5 is_stmt 1 view .LVU107
 236:Core/Src/heatshrink_decoder.c ****     uint8_t br_bit_ct = BACKREF_COUNT_BITS(hsd);
 357              		.loc 1 236 22 is_stmt 0 view .LVU108
 358 0018 0133     		adds	r3, r3, #1
 359 001a E380     		strh	r3, [r4, #6]
 237:Core/Src/heatshrink_decoder.c ****     hsd->output_count = 0;
 360              		.loc 1 237 5 is_stmt 1 view .LVU109
 361              	.LVL32:
 238:Core/Src/heatshrink_decoder.c ****     return (br_bit_ct > 8) ? HSDS_BACKREF_COUNT_MSB : HSDS_BACKREF_COUNT_LSB;
 362              		.loc 1 238 5 view .LVU110
 238:Core/Src/heatshrink_decoder.c ****     return (br_bit_ct > 8) ? HSDS_BACKREF_COUNT_MSB : HSDS_BACKREF_COUNT_LSB;
 363              		.loc 1 238 23 is_stmt 0 view .LVU111
 364 001c 0023     		movs	r3, #0
 365 001e A380     		strh	r3, [r4, #4]
 239:Core/Src/heatshrink_decoder.c **** }
 366              		.loc 1 239 5 is_stmt 1 view .LVU112
 239:Core/Src/heatshrink_decoder.c **** }
 367              		.loc 1 239 53 is_stmt 0 view .LVU113
 368 0020 0520     		movs	r0, #5
 369              	.LVL33:
 370              	.L28:
 240:Core/Src/heatshrink_decoder.c **** 
 371              		.loc 1 240 1 view .LVU114
 372              		@ sp needed
 373              	.LVL34:
 240:Core/Src/heatshrink_decoder.c **** 
 374              		.loc 1 240 1 view .LVU115
 375 0022 10BD     		pop	{r4, pc}
 376              	.LVL35:
 377              	.L29:
 234:Core/Src/heatshrink_decoder.c ****     hsd->output_index |= bits;
 378              		.loc 1 234 35 view .LVU116
 379 0024 0320     		movs	r0, #3
 380              	.LVL36:
 234:Core/Src/heatshrink_decoder.c ****     hsd->output_index |= bits;
 381              		.loc 1 234 35 view .LVU117
 382 0026 FCE7     		b	.L28
 383              	.L31:
 384              		.align	2
 385              	.L30:
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 15


 386 0028 FFFF0000 		.word	65535
 387              		.cfi_endproc
 388              	.LFE6:
 390              		.section	.text.st_backref_count_msb,"ax",%progbits
 391              		.align	1
 392              		.syntax unified
 393              		.code	16
 394              		.thumb_func
 395              		.fpu softvfp
 397              	st_backref_count_msb:
 398              	.LVL37:
 399              	.LFB7:
 242:Core/Src/heatshrink_decoder.c ****     uint8_t br_bit_ct = BACKREF_COUNT_BITS(hsd);
 400              		.loc 1 242 64 is_stmt 1 view -0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 242:Core/Src/heatshrink_decoder.c ****     uint8_t br_bit_ct = BACKREF_COUNT_BITS(hsd);
 404              		.loc 1 242 64 is_stmt 0 view .LVU119
 405 0000 10B5     		push	{r4, lr}
 406              		.cfi_def_cfa_offset 8
 407              		.cfi_offset 4, -8
 408              		.cfi_offset 14, -4
 409 0002 0400     		movs	r4, r0
 243:Core/Src/heatshrink_decoder.c ****     ASSERT(br_bit_ct > 8);
 410              		.loc 1 243 5 is_stmt 1 view .LVU120
 411              	.LVL38:
 244:Core/Src/heatshrink_decoder.c ****     uint16_t bits = get_bits(hsd, br_bit_ct - 8);
 412              		.loc 1 244 26 view .LVU121
 245:Core/Src/heatshrink_decoder.c ****     LOG("-- backref count (msb), got 0x%04x (+1)\n", bits);
 413              		.loc 1 245 5 view .LVU122
 245:Core/Src/heatshrink_decoder.c ****     LOG("-- backref count (msb), got 0x%04x (+1)\n", bits);
 414              		.loc 1 245 21 is_stmt 0 view .LVU123
 415 0004 FC21     		movs	r1, #252
 416 0006 FFF7FEFF 		bl	get_bits
 417              	.LVL39:
 246:Core/Src/heatshrink_decoder.c ****     if (bits == NO_BITS) { return HSDS_BACKREF_COUNT_MSB; }
 418              		.loc 1 246 59 is_stmt 1 view .LVU124
 247:Core/Src/heatshrink_decoder.c ****     hsd->output_count = bits << 8;
 419              		.loc 1 247 5 view .LVU125
 247:Core/Src/heatshrink_decoder.c ****     hsd->output_count = bits << 8;
 420              		.loc 1 247 8 is_stmt 0 view .LVU126
 421 000a 044B     		ldr	r3, .L35
 422 000c 9842     		cmp	r0, r3
 423 000e 03D0     		beq	.L34
 248:Core/Src/heatshrink_decoder.c ****     return HSDS_BACKREF_COUNT_LSB;
 424              		.loc 1 248 5 is_stmt 1 view .LVU127
 248:Core/Src/heatshrink_decoder.c ****     return HSDS_BACKREF_COUNT_LSB;
 425              		.loc 1 248 30 is_stmt 0 view .LVU128
 426 0010 0002     		lsls	r0, r0, #8
 427              	.LVL40:
 248:Core/Src/heatshrink_decoder.c ****     return HSDS_BACKREF_COUNT_LSB;
 428              		.loc 1 248 23 view .LVU129
 429 0012 A080     		strh	r0, [r4, #4]
 249:Core/Src/heatshrink_decoder.c **** }
 430              		.loc 1 249 5 is_stmt 1 view .LVU130
 249:Core/Src/heatshrink_decoder.c **** }
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 16


 431              		.loc 1 249 12 is_stmt 0 view .LVU131
 432 0014 0520     		movs	r0, #5
 433              	.L33:
 250:Core/Src/heatshrink_decoder.c **** 
 434              		.loc 1 250 1 view .LVU132
 435              		@ sp needed
 436              	.LVL41:
 250:Core/Src/heatshrink_decoder.c **** 
 437              		.loc 1 250 1 view .LVU133
 438 0016 10BD     		pop	{r4, pc}
 439              	.LVL42:
 440              	.L34:
 247:Core/Src/heatshrink_decoder.c ****     hsd->output_count = bits << 8;
 441              		.loc 1 247 35 view .LVU134
 442 0018 0420     		movs	r0, #4
 443              	.LVL43:
 247:Core/Src/heatshrink_decoder.c ****     hsd->output_count = bits << 8;
 444              		.loc 1 247 35 view .LVU135
 445 001a FCE7     		b	.L33
 446              	.L36:
 447              		.align	2
 448              	.L35:
 449 001c FFFF0000 		.word	65535
 450              		.cfi_endproc
 451              	.LFE7:
 453              		.section	.text.st_backref_count_lsb,"ax",%progbits
 454              		.align	1
 455              		.syntax unified
 456              		.code	16
 457              		.thumb_func
 458              		.fpu softvfp
 460              	st_backref_count_lsb:
 461              	.LVL44:
 462              	.LFB8:
 252:Core/Src/heatshrink_decoder.c ****     uint8_t br_bit_ct = BACKREF_COUNT_BITS(hsd);
 463              		.loc 1 252 64 is_stmt 1 view -0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 252:Core/Src/heatshrink_decoder.c ****     uint8_t br_bit_ct = BACKREF_COUNT_BITS(hsd);
 467              		.loc 1 252 64 is_stmt 0 view .LVU137
 468 0000 10B5     		push	{r4, lr}
 469              		.cfi_def_cfa_offset 8
 470              		.cfi_offset 4, -8
 471              		.cfi_offset 14, -4
 472 0002 0400     		movs	r4, r0
 253:Core/Src/heatshrink_decoder.c ****     uint16_t bits = get_bits(hsd, br_bit_ct < 8 ? br_bit_ct : 8);
 473              		.loc 1 253 5 is_stmt 1 view .LVU138
 474              	.LVL45:
 254:Core/Src/heatshrink_decoder.c ****     LOG("-- backref count (lsb), got 0x%04x (+1)\n", bits);
 475              		.loc 1 254 5 view .LVU139
 254:Core/Src/heatshrink_decoder.c ****     LOG("-- backref count (lsb), got 0x%04x (+1)\n", bits);
 476              		.loc 1 254 21 is_stmt 0 view .LVU140
 477 0004 0421     		movs	r1, #4
 478 0006 FFF7FEFF 		bl	get_bits
 479              	.LVL46:
 255:Core/Src/heatshrink_decoder.c ****     if (bits == NO_BITS) { return HSDS_BACKREF_COUNT_LSB; }
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 17


 480              		.loc 1 255 59 is_stmt 1 view .LVU141
 256:Core/Src/heatshrink_decoder.c ****     hsd->output_count |= bits;
 481              		.loc 1 256 5 view .LVU142
 256:Core/Src/heatshrink_decoder.c ****     hsd->output_count |= bits;
 482              		.loc 1 256 8 is_stmt 0 view .LVU143
 483 000a 064B     		ldr	r3, .L40
 484 000c 9842     		cmp	r0, r3
 485 000e 07D0     		beq	.L39
 257:Core/Src/heatshrink_decoder.c ****     hsd->output_count++;
 486              		.loc 1 257 5 is_stmt 1 view .LVU144
 257:Core/Src/heatshrink_decoder.c ****     hsd->output_count++;
 487              		.loc 1 257 23 is_stmt 0 view .LVU145
 488 0010 A388     		ldrh	r3, [r4, #4]
 489 0012 0343     		orrs	r3, r0
 490 0014 9BB2     		uxth	r3, r3
 491 0016 A380     		strh	r3, [r4, #4]
 258:Core/Src/heatshrink_decoder.c ****     return HSDS_YIELD_BACKREF;
 492              		.loc 1 258 5 is_stmt 1 view .LVU146
 258:Core/Src/heatshrink_decoder.c ****     return HSDS_YIELD_BACKREF;
 493              		.loc 1 258 22 is_stmt 0 view .LVU147
 494 0018 0133     		adds	r3, r3, #1
 495 001a A380     		strh	r3, [r4, #4]
 259:Core/Src/heatshrink_decoder.c **** }
 496              		.loc 1 259 5 is_stmt 1 view .LVU148
 259:Core/Src/heatshrink_decoder.c **** }
 497              		.loc 1 259 12 is_stmt 0 view .LVU149
 498 001c 0620     		movs	r0, #6
 499              	.LVL47:
 500              	.L38:
 260:Core/Src/heatshrink_decoder.c **** 
 501              		.loc 1 260 1 view .LVU150
 502              		@ sp needed
 503              	.LVL48:
 260:Core/Src/heatshrink_decoder.c **** 
 504              		.loc 1 260 1 view .LVU151
 505 001e 10BD     		pop	{r4, pc}
 506              	.LVL49:
 507              	.L39:
 256:Core/Src/heatshrink_decoder.c ****     hsd->output_count |= bits;
 508              		.loc 1 256 35 view .LVU152
 509 0020 0520     		movs	r0, #5
 510              	.LVL50:
 256:Core/Src/heatshrink_decoder.c ****     hsd->output_count |= bits;
 511              		.loc 1 256 35 view .LVU153
 512 0022 FCE7     		b	.L38
 513              	.L41:
 514              		.align	2
 515              	.L40:
 516 0024 FFFF0000 		.word	65535
 517              		.cfi_endproc
 518              	.LFE8:
 520              		.section	.text.push_byte,"ax",%progbits
 521              		.align	1
 522              		.syntax unified
 523              		.code	16
 524              		.thumb_func
 525              		.fpu softvfp
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 18


 527              	push_byte:
 528              	.LVL51:
 529              	.LFB12:
 336:Core/Src/heatshrink_decoder.c **** 
 337:Core/Src/heatshrink_decoder.c **** HSD_finish_res heatshrink_decoder_finish(heatshrink_decoder *hsd) {
 338:Core/Src/heatshrink_decoder.c ****     if (hsd == NULL) { return HSDR_FINISH_ERROR_NULL; }
 339:Core/Src/heatshrink_decoder.c ****     switch (hsd->state) {
 340:Core/Src/heatshrink_decoder.c ****     case HSDS_TAG_BIT:
 341:Core/Src/heatshrink_decoder.c ****         return hsd->input_size == 0 ? HSDR_FINISH_DONE : HSDR_FINISH_MORE;
 342:Core/Src/heatshrink_decoder.c **** 
 343:Core/Src/heatshrink_decoder.c ****     /* If we want to finish with no input, but are in these states, it's
 344:Core/Src/heatshrink_decoder.c ****      * because the 0-bit padding to the last byte looks like a backref
 345:Core/Src/heatshrink_decoder.c ****      * marker bit followed by all 0s for index and count bits. */
 346:Core/Src/heatshrink_decoder.c ****     case HSDS_BACKREF_INDEX_LSB:
 347:Core/Src/heatshrink_decoder.c ****     case HSDS_BACKREF_INDEX_MSB:
 348:Core/Src/heatshrink_decoder.c ****     case HSDS_BACKREF_COUNT_LSB:
 349:Core/Src/heatshrink_decoder.c ****     case HSDS_BACKREF_COUNT_MSB:
 350:Core/Src/heatshrink_decoder.c ****         return hsd->input_size == 0 ? HSDR_FINISH_DONE : HSDR_FINISH_MORE;
 351:Core/Src/heatshrink_decoder.c **** 
 352:Core/Src/heatshrink_decoder.c ****     /* If the output stream is padded with 0xFFs (possibly due to being in
 353:Core/Src/heatshrink_decoder.c ****      * flash memory), also explicitly check the input size rather than
 354:Core/Src/heatshrink_decoder.c ****      * uselessly returning MORE but yielding 0 bytes when polling. */
 355:Core/Src/heatshrink_decoder.c ****     case HSDS_YIELD_LITERAL:
 356:Core/Src/heatshrink_decoder.c ****         return hsd->input_size == 0 ? HSDR_FINISH_DONE : HSDR_FINISH_MORE;
 357:Core/Src/heatshrink_decoder.c **** 
 358:Core/Src/heatshrink_decoder.c ****     default:
 359:Core/Src/heatshrink_decoder.c ****         return HSDR_FINISH_MORE;
 360:Core/Src/heatshrink_decoder.c ****     }
 361:Core/Src/heatshrink_decoder.c **** }
 362:Core/Src/heatshrink_decoder.c **** 
 363:Core/Src/heatshrink_decoder.c **** static void push_byte(heatshrink_decoder *hsd, output_info *oi, uint8_t byte) {
 530              		.loc 1 363 79 is_stmt 1 view -0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 0
 533              		@ frame_needed = 0, uses_anonymous_args = 0
 534              		.loc 1 363 79 is_stmt 0 view .LVU155
 535 0000 10B5     		push	{r4, lr}
 536              		.cfi_def_cfa_offset 8
 537              		.cfi_offset 4, -8
 538              		.cfi_offset 14, -4
 364:Core/Src/heatshrink_decoder.c ****     LOG(" -- pushing byte: 0x%02x ('%c')\n", byte, isprint(byte) ? byte : '.');
 539              		.loc 1 364 79 is_stmt 1 view .LVU156
 365:Core/Src/heatshrink_decoder.c ****     oi->buf[(*oi->output_size)++] = byte;
 540              		.loc 1 365 5 view .LVU157
 541              		.loc 1 365 7 is_stmt 0 view .LVU158
 542 0002 0868     		ldr	r0, [r1]
 543              	.LVL52:
 544              		.loc 1 365 17 view .LVU159
 545 0004 8968     		ldr	r1, [r1, #8]
 546              	.LVL53:
 547              		.loc 1 365 14 view .LVU160
 548 0006 0B68     		ldr	r3, [r1]
 549              		.loc 1 365 31 view .LVU161
 550 0008 5C1C     		adds	r4, r3, #1
 551 000a 0C60     		str	r4, [r1]
 552              		.loc 1 365 35 view .LVU162
 553 000c C254     		strb	r2, [r0, r3]
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 19


 366:Core/Src/heatshrink_decoder.c ****     (void)hsd;
 554              		.loc 1 366 5 is_stmt 1 view .LVU163
 367:Core/Src/heatshrink_decoder.c **** }
 555              		.loc 1 367 1 is_stmt 0 view .LVU164
 556              		@ sp needed
 557 000e 10BD     		pop	{r4, pc}
 558              		.cfi_endproc
 559              	.LFE12:
 561              		.section	.text.st_yield_literal,"ax",%progbits
 562              		.align	1
 563              		.syntax unified
 564              		.code	16
 565              		.thumb_func
 566              		.fpu softvfp
 568              	st_yield_literal:
 569              	.LVL54:
 570              	.LFB4:
 201:Core/Src/heatshrink_decoder.c ****     /* Emit a repeated section from the window buffer, and add it (again)
 571              		.loc 1 201 26 is_stmt 1 view -0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 0
 574              		@ frame_needed = 0, uses_anonymous_args = 0
 201:Core/Src/heatshrink_decoder.c ****     /* Emit a repeated section from the window buffer, and add it (again)
 575              		.loc 1 201 26 is_stmt 0 view .LVU166
 576 0000 70B5     		push	{r4, r5, r6, lr}
 577              		.cfi_def_cfa_offset 16
 578              		.cfi_offset 4, -16
 579              		.cfi_offset 5, -12
 580              		.cfi_offset 6, -8
 581              		.cfi_offset 14, -4
 582 0002 0500     		movs	r5, r0
 583 0004 0C00     		movs	r4, r1
 205:Core/Src/heatshrink_decoder.c ****         uint16_t byte = get_bits(hsd, 8);
 584              		.loc 1 205 5 is_stmt 1 view .LVU167
 205:Core/Src/heatshrink_decoder.c ****         uint16_t byte = get_bits(hsd, 8);
 585              		.loc 1 205 12 is_stmt 0 view .LVU168
 586 0006 8B68     		ldr	r3, [r1, #8]
 205:Core/Src/heatshrink_decoder.c ****         uint16_t byte = get_bits(hsd, 8);
 587              		.loc 1 205 9 view .LVU169
 588 0008 1B68     		ldr	r3, [r3]
 205:Core/Src/heatshrink_decoder.c ****         uint16_t byte = get_bits(hsd, 8);
 589              		.loc 1 205 8 view .LVU170
 590 000a 4A68     		ldr	r2, [r1, #4]
 591 000c 9342     		cmp	r3, r2
 592 000e 01D3     		bcc	.L47
 216:Core/Src/heatshrink_decoder.c ****     }
 593              		.loc 1 216 16 view .LVU171
 594 0010 0120     		movs	r0, #1
 595              	.LVL55:
 596              	.L44:
 218:Core/Src/heatshrink_decoder.c **** 
 597              		.loc 1 218 1 view .LVU172
 598              		@ sp needed
 599              	.LVL56:
 600              	.LVL57:
 218:Core/Src/heatshrink_decoder.c **** 
 601              		.loc 1 218 1 view .LVU173
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 20


 602 0012 70BD     		pop	{r4, r5, r6, pc}
 603              	.LVL58:
 604              	.L47:
 605              	.LBB2:
 206:Core/Src/heatshrink_decoder.c ****         if (byte == NO_BITS) { return HSDS_YIELD_LITERAL; } /* out of input */
 606              		.loc 1 206 9 is_stmt 1 view .LVU174
 206:Core/Src/heatshrink_decoder.c ****         if (byte == NO_BITS) { return HSDS_YIELD_LITERAL; } /* out of input */
 607              		.loc 1 206 25 is_stmt 0 view .LVU175
 608 0014 0821     		movs	r1, #8
 609              	.LVL59:
 206:Core/Src/heatshrink_decoder.c ****         if (byte == NO_BITS) { return HSDS_YIELD_LITERAL; } /* out of input */
 610              		.loc 1 206 25 view .LVU176
 611 0016 FFF7FEFF 		bl	get_bits
 612              	.LVL60:
 206:Core/Src/heatshrink_decoder.c ****         if (byte == NO_BITS) { return HSDS_YIELD_LITERAL; } /* out of input */
 613              		.loc 1 206 25 view .LVU177
 614 001a 0200     		movs	r2, r0
 615              	.LVL61:
 207:Core/Src/heatshrink_decoder.c ****         uint8_t *buf = &hsd->buffers[HEATSHRINK_DECODER_INPUT_BUFFER_SIZE(hsd)];
 616              		.loc 1 207 9 is_stmt 1 view .LVU178
 207:Core/Src/heatshrink_decoder.c ****         uint8_t *buf = &hsd->buffers[HEATSHRINK_DECODER_INPUT_BUFFER_SIZE(hsd)];
 617              		.loc 1 207 12 is_stmt 0 view .LVU179
 618 001c 094B     		ldr	r3, .L49
 619 001e 9842     		cmp	r0, r3
 620 0020 01D1     		bne	.L48
 207:Core/Src/heatshrink_decoder.c ****         uint8_t *buf = &hsd->buffers[HEATSHRINK_DECODER_INPUT_BUFFER_SIZE(hsd)];
 621              		.loc 1 207 39 view .LVU180
 622 0022 0120     		movs	r0, #1
 623              	.LVL62:
 207:Core/Src/heatshrink_decoder.c ****         uint8_t *buf = &hsd->buffers[HEATSHRINK_DECODER_INPUT_BUFFER_SIZE(hsd)];
 624              		.loc 1 207 39 view .LVU181
 625 0024 F5E7     		b	.L44
 626              	.LVL63:
 627              	.L48:
 208:Core/Src/heatshrink_decoder.c ****         uint16_t mask = (1 << HEATSHRINK_DECODER_WINDOW_BITS(hsd))  - 1;
 628              		.loc 1 208 9 is_stmt 1 view .LVU182
 208:Core/Src/heatshrink_decoder.c ****         uint16_t mask = (1 << HEATSHRINK_DECODER_WINDOW_BITS(hsd))  - 1;
 629              		.loc 1 208 18 is_stmt 0 view .LVU183
 630 0026 2800     		movs	r0, r5
 631              	.LVL64:
 208:Core/Src/heatshrink_decoder.c ****         uint16_t mask = (1 << HEATSHRINK_DECODER_WINDOW_BITS(hsd))  - 1;
 632              		.loc 1 208 18 view .LVU184
 633 0028 2D30     		adds	r0, r0, #45
 634              	.LVL65:
 209:Core/Src/heatshrink_decoder.c ****         uint8_t c = byte & 0xFF;
 635              		.loc 1 209 9 is_stmt 1 view .LVU185
 210:Core/Src/heatshrink_decoder.c ****         LOG("-- emitting literal byte 0x%02x ('%c')\n", c, isprint(c) ? c : '.');
 636              		.loc 1 210 9 view .LVU186
 210:Core/Src/heatshrink_decoder.c ****         LOG("-- emitting literal byte 0x%02x ('%c')\n", c, isprint(c) ? c : '.');
 637              		.loc 1 210 17 is_stmt 0 view .LVU187
 638 002a D2B2     		uxtb	r2, r2
 639              	.LVL66:
 211:Core/Src/heatshrink_decoder.c ****         buf[hsd->head_index++ & mask] = c;
 640              		.loc 1 211 81 is_stmt 1 view .LVU188
 212:Core/Src/heatshrink_decoder.c ****         push_byte(hsd, oi, c);
 641              		.loc 1 212 9 view .LVU189
 212:Core/Src/heatshrink_decoder.c ****         push_byte(hsd, oi, c);
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 21


 642              		.loc 1 212 16 is_stmt 0 view .LVU190
 643 002c 2989     		ldrh	r1, [r5, #8]
 212:Core/Src/heatshrink_decoder.c ****         push_byte(hsd, oi, c);
 644              		.loc 1 212 28 view .LVU191
 645 002e 4B1C     		adds	r3, r1, #1
 646 0030 2B81     		strh	r3, [r5, #8]
 212:Core/Src/heatshrink_decoder.c ****         push_byte(hsd, oi, c);
 647              		.loc 1 212 31 view .LVU192
 648 0032 FF23     		movs	r3, #255
 649 0034 0B40     		ands	r3, r1
 212:Core/Src/heatshrink_decoder.c ****         push_byte(hsd, oi, c);
 650              		.loc 1 212 39 view .LVU193
 651 0036 C254     		strb	r2, [r0, r3]
 213:Core/Src/heatshrink_decoder.c ****         return HSDS_TAG_BIT;
 652              		.loc 1 213 9 is_stmt 1 view .LVU194
 653 0038 2100     		movs	r1, r4
 654 003a 2800     		movs	r0, r5
 655              	.LVL67:
 213:Core/Src/heatshrink_decoder.c ****         return HSDS_TAG_BIT;
 656              		.loc 1 213 9 is_stmt 0 view .LVU195
 657 003c FFF7FEFF 		bl	push_byte
 658              	.LVL68:
 214:Core/Src/heatshrink_decoder.c ****     } else {
 659              		.loc 1 214 9 is_stmt 1 view .LVU196
 214:Core/Src/heatshrink_decoder.c ****     } else {
 660              		.loc 1 214 16 is_stmt 0 view .LVU197
 661 0040 0020     		movs	r0, #0
 662 0042 E6E7     		b	.L44
 663              	.L50:
 664              		.align	2
 665              	.L49:
 666 0044 FFFF0000 		.word	65535
 667              	.LBE2:
 668              		.cfi_endproc
 669              	.LFE4:
 671              		.section	.text.st_yield_backref,"ax",%progbits
 672              		.align	1
 673              		.syntax unified
 674              		.code	16
 675              		.thumb_func
 676              		.fpu softvfp
 678              	st_yield_backref:
 679              	.LVL69:
 680              	.LFB9:
 263:Core/Src/heatshrink_decoder.c ****     size_t count = oi->buf_size - *oi->output_size;
 681              		.loc 1 263 26 is_stmt 1 view -0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 0
 684              		@ frame_needed = 0, uses_anonymous_args = 0
 263:Core/Src/heatshrink_decoder.c ****     size_t count = oi->buf_size - *oi->output_size;
 685              		.loc 1 263 26 is_stmt 0 view .LVU199
 686 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 687              		.cfi_def_cfa_offset 24
 688              		.cfi_offset 3, -24
 689              		.cfi_offset 4, -20
 690              		.cfi_offset 5, -16
 691              		.cfi_offset 6, -12
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 22


 692              		.cfi_offset 7, -8
 693              		.cfi_offset 14, -4
 694 0002 DE46     		mov	lr, fp
 695 0004 5746     		mov	r7, r10
 696 0006 4E46     		mov	r6, r9
 697 0008 4546     		mov	r5, r8
 698 000a E0B5     		push	{r5, r6, r7, lr}
 699              		.cfi_def_cfa_offset 40
 700              		.cfi_offset 8, -40
 701              		.cfi_offset 9, -36
 702              		.cfi_offset 10, -32
 703              		.cfi_offset 11, -28
 704 000c 0400     		movs	r4, r0
 705 000e 8846     		mov	r8, r1
 264:Core/Src/heatshrink_decoder.c ****     if (count > 0) {
 706              		.loc 1 264 5 is_stmt 1 view .LVU200
 264:Core/Src/heatshrink_decoder.c ****     if (count > 0) {
 707              		.loc 1 264 22 is_stmt 0 view .LVU201
 708 0010 4A68     		ldr	r2, [r1, #4]
 264:Core/Src/heatshrink_decoder.c ****     if (count > 0) {
 709              		.loc 1 264 38 view .LVU202
 710 0012 8B68     		ldr	r3, [r1, #8]
 264:Core/Src/heatshrink_decoder.c ****     if (count > 0) {
 711              		.loc 1 264 35 view .LVU203
 712 0014 1B68     		ldr	r3, [r3]
 264:Core/Src/heatshrink_decoder.c ****     if (count > 0) {
 713              		.loc 1 264 12 view .LVU204
 714 0016 D11A     		subs	r1, r2, r3
 715              	.LVL70:
 265:Core/Src/heatshrink_decoder.c ****         size_t i = 0;
 716              		.loc 1 265 5 is_stmt 1 view .LVU205
 265:Core/Src/heatshrink_decoder.c ****         size_t i = 0;
 717              		.loc 1 265 8 is_stmt 0 view .LVU206
 718 0018 9A42     		cmp	r2, r3
 719 001a 29D0     		beq	.L56
 720              	.LBB3:
 266:Core/Src/heatshrink_decoder.c ****         if (hsd->output_count < count) count = hsd->output_count;
 721              		.loc 1 266 9 is_stmt 1 view .LVU207
 722              	.LVL71:
 267:Core/Src/heatshrink_decoder.c ****         uint8_t *buf = &hsd->buffers[HEATSHRINK_DECODER_INPUT_BUFFER_SIZE(hsd)];
 723              		.loc 1 267 9 view .LVU208
 267:Core/Src/heatshrink_decoder.c ****         uint8_t *buf = &hsd->buffers[HEATSHRINK_DECODER_INPUT_BUFFER_SIZE(hsd)];
 724              		.loc 1 267 16 is_stmt 0 view .LVU209
 725 001c 8388     		ldrh	r3, [r0, #4]
 726 001e 9946     		mov	r9, r3
 267:Core/Src/heatshrink_decoder.c ****         uint8_t *buf = &hsd->buffers[HEATSHRINK_DECODER_INPUT_BUFFER_SIZE(hsd)];
 727              		.loc 1 267 12 view .LVU210
 728 0020 8B42     		cmp	r3, r1
 729 0022 00D3     		bcc	.L53
 730              	.LBE3:
 264:Core/Src/heatshrink_decoder.c ****     if (count > 0) {
 731              		.loc 1 264 12 view .LVU211
 732 0024 8946     		mov	r9, r1
 733              	.L53:
 734              	.LVL72:
 735              	.LBB5:
 268:Core/Src/heatshrink_decoder.c ****         uint16_t mask = (1 << HEATSHRINK_DECODER_WINDOW_BITS(hsd)) - 1;
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 23


 736              		.loc 1 268 9 is_stmt 1 view .LVU212
 268:Core/Src/heatshrink_decoder.c ****         uint16_t mask = (1 << HEATSHRINK_DECODER_WINDOW_BITS(hsd)) - 1;
 737              		.loc 1 268 18 is_stmt 0 view .LVU213
 738 0026 2700     		movs	r7, r4
 739 0028 2D37     		adds	r7, r7, #45
 740              	.LVL73:
 269:Core/Src/heatshrink_decoder.c ****         uint16_t neg_offset = hsd->output_index;
 741              		.loc 1 269 9 is_stmt 1 view .LVU214
 270:Core/Src/heatshrink_decoder.c ****         LOG("-- emitting %zu bytes from -%u bytes back\n", count, neg_offset);
 742              		.loc 1 270 9 view .LVU215
 270:Core/Src/heatshrink_decoder.c ****         LOG("-- emitting %zu bytes from -%u bytes back\n", count, neg_offset);
 743              		.loc 1 270 18 is_stmt 0 view .LVU216
 744 002a E388     		ldrh	r3, [r4, #6]
 745 002c 9A46     		mov	r10, r3
 746              	.LVL74:
 271:Core/Src/heatshrink_decoder.c ****         ASSERT(neg_offset <= mask + 1);
 747              		.loc 1 271 78 is_stmt 1 view .LVU217
 272:Core/Src/heatshrink_decoder.c ****         ASSERT(count <= (size_t)(1 << BACKREF_COUNT_BITS(hsd)));
 748              		.loc 1 272 39 view .LVU218
 273:Core/Src/heatshrink_decoder.c **** 
 749              		.loc 1 273 64 view .LVU219
 275:Core/Src/heatshrink_decoder.c ****             uint8_t c = buf[(hsd->head_index - neg_offset) & mask];
 750              		.loc 1 275 9 view .LVU220
 275:Core/Src/heatshrink_decoder.c ****             uint8_t c = buf[(hsd->head_index - neg_offset) & mask];
 751              		.loc 1 275 15 is_stmt 0 view .LVU221
 752 002e 0026     		movs	r6, #0
 275:Core/Src/heatshrink_decoder.c ****             uint8_t c = buf[(hsd->head_index - neg_offset) & mask];
 753              		.loc 1 275 9 view .LVU222
 754 0030 13E0     		b	.L54
 755              	.LVL75:
 756              	.L55:
 757              	.LBB4:
 276:Core/Src/heatshrink_decoder.c ****             push_byte(hsd, oi, c);
 758              		.loc 1 276 13 is_stmt 1 discriminator 3 view .LVU223
 276:Core/Src/heatshrink_decoder.c ****             push_byte(hsd, oi, c);
 759              		.loc 1 276 33 is_stmt 0 discriminator 3 view .LVU224
 760 0032 2389     		ldrh	r3, [r4, #8]
 276:Core/Src/heatshrink_decoder.c ****             push_byte(hsd, oi, c);
 761              		.loc 1 276 60 discriminator 3 view .LVU225
 762 0034 5246     		mov	r2, r10
 763 0036 9B1A     		subs	r3, r3, r2
 764 0038 FF25     		movs	r5, #255
 765 003a 2B40     		ands	r3, r5
 276:Core/Src/heatshrink_decoder.c ****             push_byte(hsd, oi, c);
 766              		.loc 1 276 21 discriminator 3 view .LVU226
 767 003c FB5C     		ldrb	r3, [r7, r3]
 768 003e 9B46     		mov	fp, r3
 769              	.LVL76:
 277:Core/Src/heatshrink_decoder.c ****             buf[hsd->head_index & mask] = c;
 770              		.loc 1 277 13 is_stmt 1 discriminator 3 view .LVU227
 771 0040 1A00     		movs	r2, r3
 772 0042 4146     		mov	r1, r8
 773 0044 2000     		movs	r0, r4
 774 0046 FFF7FEFF 		bl	push_byte
 775              	.LVL77:
 278:Core/Src/heatshrink_decoder.c ****             hsd->head_index++;
 776              		.loc 1 278 13 discriminator 3 view .LVU228
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 24


 278:Core/Src/heatshrink_decoder.c ****             hsd->head_index++;
 777              		.loc 1 278 20 is_stmt 0 discriminator 3 view .LVU229
 778 004a 2389     		ldrh	r3, [r4, #8]
 278:Core/Src/heatshrink_decoder.c ****             hsd->head_index++;
 779              		.loc 1 278 33 discriminator 3 view .LVU230
 780 004c 1D40     		ands	r5, r3
 278:Core/Src/heatshrink_decoder.c ****             hsd->head_index++;
 781              		.loc 1 278 41 discriminator 3 view .LVU231
 782 004e 5B46     		mov	r3, fp
 783 0050 7B55     		strb	r3, [r7, r5]
 279:Core/Src/heatshrink_decoder.c ****             LOG("  -- ++ 0x%02x\n", c);
 784              		.loc 1 279 13 is_stmt 1 discriminator 3 view .LVU232
 279:Core/Src/heatshrink_decoder.c ****             LOG("  -- ++ 0x%02x\n", c);
 785              		.loc 1 279 16 is_stmt 0 discriminator 3 view .LVU233
 786 0052 2389     		ldrh	r3, [r4, #8]
 279:Core/Src/heatshrink_decoder.c ****             LOG("  -- ++ 0x%02x\n", c);
 787              		.loc 1 279 28 discriminator 3 view .LVU234
 788 0054 0133     		adds	r3, r3, #1
 789 0056 2381     		strh	r3, [r4, #8]
 280:Core/Src/heatshrink_decoder.c ****         }
 790              		.loc 1 280 39 is_stmt 1 discriminator 3 view .LVU235
 791              	.LBE4:
 275:Core/Src/heatshrink_decoder.c ****             uint8_t c = buf[(hsd->head_index - neg_offset) & mask];
 792              		.loc 1 275 28 discriminator 3 view .LVU236
 275:Core/Src/heatshrink_decoder.c ****             uint8_t c = buf[(hsd->head_index - neg_offset) & mask];
 793              		.loc 1 275 29 is_stmt 0 discriminator 3 view .LVU237
 794 0058 0136     		adds	r6, r6, #1
 795              	.LVL78:
 796              	.L54:
 275:Core/Src/heatshrink_decoder.c ****             uint8_t c = buf[(hsd->head_index - neg_offset) & mask];
 797              		.loc 1 275 19 is_stmt 1 discriminator 1 view .LVU238
 275:Core/Src/heatshrink_decoder.c ****             uint8_t c = buf[(hsd->head_index - neg_offset) & mask];
 798              		.loc 1 275 9 is_stmt 0 discriminator 1 view .LVU239
 799 005a B145     		cmp	r9, r6
 800 005c E9D8     		bhi	.L55
 282:Core/Src/heatshrink_decoder.c ****         if (hsd->output_count == 0) { return HSDS_TAG_BIT; }
 801              		.loc 1 282 9 is_stmt 1 view .LVU240
 282:Core/Src/heatshrink_decoder.c ****         if (hsd->output_count == 0) { return HSDS_TAG_BIT; }
 802              		.loc 1 282 27 is_stmt 0 view .LVU241
 803 005e A388     		ldrh	r3, [r4, #4]
 804 0060 4A46     		mov	r2, r9
 805 0062 9B1A     		subs	r3, r3, r2
 806 0064 9BB2     		uxth	r3, r3
 807 0066 A380     		strh	r3, [r4, #4]
 283:Core/Src/heatshrink_decoder.c ****     }
 808              		.loc 1 283 9 is_stmt 1 view .LVU242
 283:Core/Src/heatshrink_decoder.c ****     }
 809              		.loc 1 283 12 is_stmt 0 view .LVU243
 810 0068 002B     		cmp	r3, #0
 811 006a 08D0     		beq	.L57
 812              	.LVL79:
 283:Core/Src/heatshrink_decoder.c ****     }
 813              		.loc 1 283 12 view .LVU244
 814              	.LBE5:
 285:Core/Src/heatshrink_decoder.c **** }
 815              		.loc 1 285 12 view .LVU245
 816 006c 0620     		movs	r0, #6
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 25


 817 006e 00E0     		b	.L52
 818              	.LVL80:
 819              	.L56:
 285:Core/Src/heatshrink_decoder.c **** }
 820              		.loc 1 285 12 view .LVU246
 821 0070 0620     		movs	r0, #6
 822              	.LVL81:
 823              	.L52:
 286:Core/Src/heatshrink_decoder.c **** 
 824              		.loc 1 286 1 view .LVU247
 825              		@ sp needed
 826              	.LVL82:
 827              	.LVL83:
 286:Core/Src/heatshrink_decoder.c **** 
 828              		.loc 1 286 1 view .LVU248
 829 0072 F0BC     		pop	{r4, r5, r6, r7}
 830 0074 BB46     		mov	fp, r7
 831 0076 B246     		mov	r10, r6
 832 0078 A946     		mov	r9, r5
 833 007a A046     		mov	r8, r4
 834 007c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 835              	.LVL84:
 836              	.L57:
 837              	.LBB6:
 283:Core/Src/heatshrink_decoder.c ****     }
 838              		.loc 1 283 46 view .LVU249
 839 007e 0020     		movs	r0, #0
 840 0080 F7E7     		b	.L52
 841              	.LBE6:
 842              		.cfi_endproc
 843              	.LFE9:
 845              		.section	.text.heatshrink_decoder_reset,"ax",%progbits
 846              		.align	1
 847              		.global	heatshrink_decoder_reset
 848              		.syntax unified
 849              		.code	16
 850              		.thumb_func
 851              		.fpu softvfp
 853              	heatshrink_decoder_reset:
 854              	.LVL85:
 855              	.LFB0:
  80:Core/Src/heatshrink_decoder.c ****     size_t buf_sz = 1 << HEATSHRINK_DECODER_WINDOW_BITS(hsd);
 856              		.loc 1 80 56 is_stmt 1 view -0
 857              		.cfi_startproc
 858              		@ args = 0, pretend = 0, frame = 0
 859              		@ frame_needed = 0, uses_anonymous_args = 0
  80:Core/Src/heatshrink_decoder.c ****     size_t buf_sz = 1 << HEATSHRINK_DECODER_WINDOW_BITS(hsd);
 860              		.loc 1 80 56 is_stmt 0 view .LVU251
 861 0000 10B5     		push	{r4, lr}
 862              		.cfi_def_cfa_offset 8
 863              		.cfi_offset 4, -8
 864              		.cfi_offset 14, -4
 865 0002 0400     		movs	r4, r0
  81:Core/Src/heatshrink_decoder.c ****     size_t input_sz = HEATSHRINK_DECODER_INPUT_BUFFER_SIZE(hsd);
 866              		.loc 1 81 5 is_stmt 1 view .LVU252
 867              	.LVL86:
  82:Core/Src/heatshrink_decoder.c ****     memset(hsd->buffers, 0, buf_sz + input_sz);
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 26


 868              		.loc 1 82 5 view .LVU253
  83:Core/Src/heatshrink_decoder.c ****     hsd->state = HSDS_TAG_BIT;
 869              		.loc 1 83 5 view .LVU254
  83:Core/Src/heatshrink_decoder.c ****     hsd->state = HSDS_TAG_BIT;
 870              		.loc 1 83 15 is_stmt 0 view .LVU255
 871 0004 0D30     		adds	r0, r0, #13
 872              	.LVL87:
  83:Core/Src/heatshrink_decoder.c ****     hsd->state = HSDS_TAG_BIT;
 873              		.loc 1 83 5 view .LVU256
 874 0006 9022     		movs	r2, #144
 875 0008 5200     		lsls	r2, r2, #1
 876 000a 0021     		movs	r1, #0
 877 000c FFF7FEFF 		bl	memset
 878              	.LVL88:
  84:Core/Src/heatshrink_decoder.c ****     hsd->input_size = 0;
 879              		.loc 1 84 5 is_stmt 1 view .LVU257
  84:Core/Src/heatshrink_decoder.c ****     hsd->input_size = 0;
 880              		.loc 1 84 16 is_stmt 0 view .LVU258
 881 0010 0023     		movs	r3, #0
 882 0012 A372     		strb	r3, [r4, #10]
  85:Core/Src/heatshrink_decoder.c ****     hsd->input_index = 0;
 883              		.loc 1 85 5 is_stmt 1 view .LVU259
  85:Core/Src/heatshrink_decoder.c ****     hsd->input_index = 0;
 884              		.loc 1 85 21 is_stmt 0 view .LVU260
 885 0014 0022     		movs	r2, #0
 886 0016 2380     		strh	r3, [r4]
  86:Core/Src/heatshrink_decoder.c ****     hsd->bit_index = 0x00;
 887              		.loc 1 86 5 is_stmt 1 view .LVU261
  86:Core/Src/heatshrink_decoder.c ****     hsd->bit_index = 0x00;
 888              		.loc 1 86 22 is_stmt 0 view .LVU262
 889 0018 6380     		strh	r3, [r4, #2]
  87:Core/Src/heatshrink_decoder.c ****     hsd->current_byte = 0x00;
 890              		.loc 1 87 5 is_stmt 1 view .LVU263
  87:Core/Src/heatshrink_decoder.c ****     hsd->current_byte = 0x00;
 891              		.loc 1 87 20 is_stmt 0 view .LVU264
 892 001a 2273     		strb	r2, [r4, #12]
  88:Core/Src/heatshrink_decoder.c ****     hsd->output_count = 0;
 893              		.loc 1 88 5 is_stmt 1 view .LVU265
  88:Core/Src/heatshrink_decoder.c ****     hsd->output_count = 0;
 894              		.loc 1 88 23 is_stmt 0 view .LVU266
 895 001c E272     		strb	r2, [r4, #11]
  89:Core/Src/heatshrink_decoder.c ****     hsd->output_index = 0;
 896              		.loc 1 89 5 is_stmt 1 view .LVU267
  89:Core/Src/heatshrink_decoder.c ****     hsd->output_index = 0;
 897              		.loc 1 89 23 is_stmt 0 view .LVU268
 898 001e A380     		strh	r3, [r4, #4]
  90:Core/Src/heatshrink_decoder.c ****     hsd->head_index = 0;
 899              		.loc 1 90 5 is_stmt 1 view .LVU269
  90:Core/Src/heatshrink_decoder.c ****     hsd->head_index = 0;
 900              		.loc 1 90 23 is_stmt 0 view .LVU270
 901 0020 E380     		strh	r3, [r4, #6]
  91:Core/Src/heatshrink_decoder.c **** }
 902              		.loc 1 91 5 is_stmt 1 view .LVU271
  91:Core/Src/heatshrink_decoder.c **** }
 903              		.loc 1 91 21 is_stmt 0 view .LVU272
 904 0022 2381     		strh	r3, [r4, #8]
  92:Core/Src/heatshrink_decoder.c **** 
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 27


 905              		.loc 1 92 1 view .LVU273
 906              		@ sp needed
 907              	.LVL89:
  92:Core/Src/heatshrink_decoder.c **** 
 908              		.loc 1 92 1 view .LVU274
 909 0024 10BD     		pop	{r4, pc}
 910              		.cfi_endproc
 911              	.LFE0:
 913              		.section	.text.heatshrink_decoder_sink,"ax",%progbits
 914              		.align	1
 915              		.global	heatshrink_decoder_sink
 916              		.syntax unified
 917              		.code	16
 918              		.thumb_func
 919              		.fpu softvfp
 921              	heatshrink_decoder_sink:
 922              	.LVL90:
 923              	.LFB1:
  96:Core/Src/heatshrink_decoder.c ****     if ((hsd == NULL) || (in_buf == NULL) || (input_size == NULL)) {
 924              		.loc 1 96 59 is_stmt 1 view -0
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 0
 927              		@ frame_needed = 0, uses_anonymous_args = 0
  96:Core/Src/heatshrink_decoder.c ****     if ((hsd == NULL) || (in_buf == NULL) || (input_size == NULL)) {
 928              		.loc 1 96 59 is_stmt 0 view .LVU276
 929 0000 70B5     		push	{r4, r5, r6, lr}
 930              		.cfi_def_cfa_offset 16
 931              		.cfi_offset 4, -16
 932              		.cfi_offset 5, -12
 933              		.cfi_offset 6, -8
 934              		.cfi_offset 14, -4
 935 0002 0400     		movs	r4, r0
 936 0004 1D00     		movs	r5, r3
  97:Core/Src/heatshrink_decoder.c ****         return HSDR_SINK_ERROR_NULL;
 937              		.loc 1 97 5 is_stmt 1 view .LVU277
  97:Core/Src/heatshrink_decoder.c ****         return HSDR_SINK_ERROR_NULL;
 938              		.loc 1 97 8 is_stmt 0 view .LVU278
 939 0006 0028     		cmp	r0, #0
 940 0008 1BD0     		beq	.L63
  97:Core/Src/heatshrink_decoder.c ****         return HSDR_SINK_ERROR_NULL;
 941              		.loc 1 97 23 discriminator 1 view .LVU279
 942 000a 0029     		cmp	r1, #0
 943 000c 1CD0     		beq	.L64
  97:Core/Src/heatshrink_decoder.c ****         return HSDR_SINK_ERROR_NULL;
 944              		.loc 1 97 43 discriminator 2 view .LVU280
 945 000e 002B     		cmp	r3, #0
 946 0010 1DD0     		beq	.L65
 101:Core/Src/heatshrink_decoder.c ****     if (rem == 0) {
 947              		.loc 1 101 5 is_stmt 1 view .LVU281
 101:Core/Src/heatshrink_decoder.c ****     if (rem == 0) {
 948              		.loc 1 101 65 is_stmt 0 view .LVU282
 949 0012 0088     		ldrh	r0, [r0]
 950              	.LVL91:
 101:Core/Src/heatshrink_decoder.c ****     if (rem == 0) {
 951              		.loc 1 101 60 view .LVU283
 952 0014 2023     		movs	r3, #32
 953              	.LVL92:
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 28


 101:Core/Src/heatshrink_decoder.c ****     if (rem == 0) {
 954              		.loc 1 101 60 view .LVU284
 955 0016 1E1A     		subs	r6, r3, r0
 956              	.LVL93:
 102:Core/Src/heatshrink_decoder.c ****         *input_size = 0;
 957              		.loc 1 102 5 is_stmt 1 view .LVU285
 102:Core/Src/heatshrink_decoder.c ****         *input_size = 0;
 958              		.loc 1 102 8 is_stmt 0 view .LVU286
 959 0018 8342     		cmp	r3, r0
 960 001a 03D1     		bne	.L61
 103:Core/Src/heatshrink_decoder.c ****         return HSDR_SINK_FULL;
 961              		.loc 1 103 9 is_stmt 1 view .LVU287
 103:Core/Src/heatshrink_decoder.c ****         return HSDR_SINK_FULL;
 962              		.loc 1 103 21 is_stmt 0 view .LVU288
 963 001c 0023     		movs	r3, #0
 964 001e 2B60     		str	r3, [r5]
 104:Core/Src/heatshrink_decoder.c ****     }
 965              		.loc 1 104 9 is_stmt 1 view .LVU289
 104:Core/Src/heatshrink_decoder.c ****     }
 966              		.loc 1 104 16 is_stmt 0 view .LVU290
 967 0020 0120     		movs	r0, #1
 968              	.LVL94:
 969              	.L60:
 114:Core/Src/heatshrink_decoder.c **** 
 970              		.loc 1 114 1 view .LVU291
 971              		@ sp needed
 972              	.LVL95:
 973              	.LVL96:
 114:Core/Src/heatshrink_decoder.c **** 
 974              		.loc 1 114 1 view .LVU292
 975 0022 70BD     		pop	{r4, r5, r6, pc}
 976              	.LVL97:
 977              	.L61:
 107:Core/Src/heatshrink_decoder.c ****     LOG("-- sinking %zd bytes\n", size);
 978              		.loc 1 107 5 is_stmt 1 view .LVU293
 107:Core/Src/heatshrink_decoder.c ****     LOG("-- sinking %zd bytes\n", size);
 979              		.loc 1 107 10 is_stmt 0 view .LVU294
 980 0024 9642     		cmp	r6, r2
 981 0026 00D9     		bls	.L62
 982 0028 1600     		movs	r6, r2
 983              	.LVL98:
 984              	.L62:
 108:Core/Src/heatshrink_decoder.c ****     /* copy into input buffer (at head of buffers) */
 985              		.loc 1 108 40 is_stmt 1 view .LVU295
 110:Core/Src/heatshrink_decoder.c ****     hsd->input_size += size;
 986              		.loc 1 110 5 view .LVU296
 110:Core/Src/heatshrink_decoder.c ****     hsd->input_size += size;
 987              		.loc 1 110 12 is_stmt 0 view .LVU297
 988 002a 0830     		adds	r0, r0, #8
 989              	.LVL99:
 110:Core/Src/heatshrink_decoder.c ****     hsd->input_size += size;
 990              		.loc 1 110 12 view .LVU298
 991 002c 2018     		adds	r0, r4, r0
 992              	.LVL100:
 110:Core/Src/heatshrink_decoder.c ****     hsd->input_size += size;
 993              		.loc 1 110 12 view .LVU299
 994 002e 0530     		adds	r0, r0, #5
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 29


 110:Core/Src/heatshrink_decoder.c ****     hsd->input_size += size;
 995              		.loc 1 110 5 view .LVU300
 996 0030 3200     		movs	r2, r6
 997 0032 FFF7FEFF 		bl	memcpy
 998              	.LVL101:
 111:Core/Src/heatshrink_decoder.c ****     *input_size = size;
 999              		.loc 1 111 5 is_stmt 1 view .LVU301
 111:Core/Src/heatshrink_decoder.c ****     *input_size = size;
 1000              		.loc 1 111 21 is_stmt 0 view .LVU302
 1001 0036 2388     		ldrh	r3, [r4]
 1002 0038 9B19     		adds	r3, r3, r6
 1003 003a 2380     		strh	r3, [r4]
 112:Core/Src/heatshrink_decoder.c ****     return HSDR_SINK_OK;
 1004              		.loc 1 112 5 is_stmt 1 view .LVU303
 112:Core/Src/heatshrink_decoder.c ****     return HSDR_SINK_OK;
 1005              		.loc 1 112 17 is_stmt 0 view .LVU304
 1006 003c 2E60     		str	r6, [r5]
 113:Core/Src/heatshrink_decoder.c **** }
 1007              		.loc 1 113 5 is_stmt 1 view .LVU305
 113:Core/Src/heatshrink_decoder.c **** }
 1008              		.loc 1 113 12 is_stmt 0 view .LVU306
 1009 003e 0020     		movs	r0, #0
 1010 0040 EFE7     		b	.L60
 1011              	.LVL102:
 1012              	.L63:
  98:Core/Src/heatshrink_decoder.c ****     }
 1013              		.loc 1 98 16 view .LVU307
 1014 0042 0120     		movs	r0, #1
 1015              	.LVL103:
  98:Core/Src/heatshrink_decoder.c ****     }
 1016              		.loc 1 98 16 view .LVU308
 1017 0044 4042     		rsbs	r0, r0, #0
 1018 0046 ECE7     		b	.L60
 1019              	.LVL104:
 1020              	.L64:
  98:Core/Src/heatshrink_decoder.c ****     }
 1021              		.loc 1 98 16 view .LVU309
 1022 0048 0120     		movs	r0, #1
 1023              	.LVL105:
  98:Core/Src/heatshrink_decoder.c ****     }
 1024              		.loc 1 98 16 view .LVU310
 1025 004a 4042     		rsbs	r0, r0, #0
 1026 004c E9E7     		b	.L60
 1027              	.LVL106:
 1028              	.L65:
  98:Core/Src/heatshrink_decoder.c ****     }
 1029              		.loc 1 98 16 view .LVU311
 1030 004e 0120     		movs	r0, #1
 1031              	.LVL107:
  98:Core/Src/heatshrink_decoder.c ****     }
 1032              		.loc 1 98 16 view .LVU312
 1033 0050 4042     		rsbs	r0, r0, #0
 1034 0052 E6E7     		b	.L60
 1035              		.cfi_endproc
 1036              	.LFE1:
 1038              		.section	.text.heatshrink_decoder_poll,"ax",%progbits
 1039              		.align	1
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 30


 1040              		.global	heatshrink_decoder_poll
 1041              		.syntax unified
 1042              		.code	16
 1043              		.thumb_func
 1044              		.fpu softvfp
 1046              	heatshrink_decoder_poll:
 1047              	.LVL108:
 1048              	.LFB2:
 136:Core/Src/heatshrink_decoder.c ****     if ((hsd == NULL) || (out_buf == NULL) || (output_size == NULL)) {
 1049              		.loc 1 136 69 is_stmt 1 view -0
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 16
 1052              		@ frame_needed = 0, uses_anonymous_args = 0
 136:Core/Src/heatshrink_decoder.c ****     if ((hsd == NULL) || (out_buf == NULL) || (output_size == NULL)) {
 1053              		.loc 1 136 69 is_stmt 0 view .LVU314
 1054 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1055              		.cfi_def_cfa_offset 20
 1056              		.cfi_offset 4, -20
 1057              		.cfi_offset 5, -16
 1058              		.cfi_offset 6, -12
 1059              		.cfi_offset 7, -8
 1060              		.cfi_offset 14, -4
 1061 0002 85B0     		sub	sp, sp, #20
 1062              		.cfi_def_cfa_offset 40
 1063 0004 0400     		movs	r4, r0
 1064 0006 1700     		movs	r7, r2
 1065 0008 1E00     		movs	r6, r3
 137:Core/Src/heatshrink_decoder.c ****         return HSDR_POLL_ERROR_NULL;
 1066              		.loc 1 137 5 is_stmt 1 view .LVU315
 137:Core/Src/heatshrink_decoder.c ****         return HSDR_POLL_ERROR_NULL;
 1067              		.loc 1 137 8 is_stmt 0 view .LVU316
 1068 000a 0028     		cmp	r0, #0
 1069 000c 3FD0     		beq	.L78
 137:Core/Src/heatshrink_decoder.c ****         return HSDR_POLL_ERROR_NULL;
 1070              		.loc 1 137 23 discriminator 1 view .LVU317
 1071 000e 0029     		cmp	r1, #0
 1072 0010 40D0     		beq	.L79
 137:Core/Src/heatshrink_decoder.c ****         return HSDR_POLL_ERROR_NULL;
 1073              		.loc 1 137 44 discriminator 2 view .LVU318
 1074 0012 002B     		cmp	r3, #0
 1075 0014 41D0     		beq	.L80
 140:Core/Src/heatshrink_decoder.c **** 
 1076              		.loc 1 140 5 is_stmt 1 view .LVU319
 140:Core/Src/heatshrink_decoder.c **** 
 1077              		.loc 1 140 18 is_stmt 0 view .LVU320
 1078 0016 0023     		movs	r3, #0
 1079              	.LVL109:
 140:Core/Src/heatshrink_decoder.c **** 
 1080              		.loc 1 140 18 view .LVU321
 1081 0018 3360     		str	r3, [r6]
 142:Core/Src/heatshrink_decoder.c ****     oi.buf = out_buf;
 1082              		.loc 1 142 5 is_stmt 1 view .LVU322
 143:Core/Src/heatshrink_decoder.c ****     oi.buf_size = out_buf_size;
 1083              		.loc 1 143 5 view .LVU323
 143:Core/Src/heatshrink_decoder.c ****     oi.buf_size = out_buf_size;
 1084              		.loc 1 143 12 is_stmt 0 view .LVU324
 1085 001a 0191     		str	r1, [sp, #4]
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 31


 144:Core/Src/heatshrink_decoder.c ****     oi.output_size = output_size;
 1086              		.loc 1 144 5 is_stmt 1 view .LVU325
 144:Core/Src/heatshrink_decoder.c ****     oi.output_size = output_size;
 1087              		.loc 1 144 17 is_stmt 0 view .LVU326
 1088 001c 0292     		str	r2, [sp, #8]
 145:Core/Src/heatshrink_decoder.c **** 
 1089              		.loc 1 145 5 is_stmt 1 view .LVU327
 145:Core/Src/heatshrink_decoder.c **** 
 1090              		.loc 1 145 20 is_stmt 0 view .LVU328
 1091 001e 0396     		str	r6, [sp, #12]
 1092 0020 06E0     		b	.L77
 1093              	.LVL110:
 1094              	.L75:
 1095              	.LBB7:
 153:Core/Src/heatshrink_decoder.c ****             break;
 1096              		.loc 1 153 13 is_stmt 1 view .LVU329
 153:Core/Src/heatshrink_decoder.c ****             break;
 1097              		.loc 1 153 26 is_stmt 0 view .LVU330
 1098 0022 2000     		movs	r0, r4
 1099 0024 FFF7FEFF 		bl	st_tag_bit
 1100              	.LVL111:
 153:Core/Src/heatshrink_decoder.c ****             break;
 1101              		.loc 1 153 24 view .LVU331
 1102 0028 A072     		strb	r0, [r4, #10]
 154:Core/Src/heatshrink_decoder.c ****         case HSDS_YIELD_LITERAL:
 1103              		.loc 1 154 13 is_stmt 1 view .LVU332
 1104              	.L76:
 179:Core/Src/heatshrink_decoder.c ****             if (*output_size == out_buf_size) { return HSDR_POLL_MORE; }
 1105              		.loc 1 179 9 view .LVU333
 179:Core/Src/heatshrink_decoder.c ****             if (*output_size == out_buf_size) { return HSDR_POLL_MORE; }
 1106              		.loc 1 179 16 is_stmt 0 view .LVU334
 1107 002a A37A     		ldrb	r3, [r4, #10]
 179:Core/Src/heatshrink_decoder.c ****             if (*output_size == out_buf_size) { return HSDR_POLL_MORE; }
 1108              		.loc 1 179 12 view .LVU335
 1109 002c AB42     		cmp	r3, r5
 1110 002e 26D0     		beq	.L83
 1111              	.LVL112:
 1112              	.L77:
 179:Core/Src/heatshrink_decoder.c ****             if (*output_size == out_buf_size) { return HSDR_POLL_MORE; }
 1113              		.loc 1 179 12 view .LVU336
 1114              	.LBE7:
 147:Core/Src/heatshrink_decoder.c ****         LOG("-- poll, state is %d (%s), input_size %d\n",
 1115              		.loc 1 147 5 is_stmt 1 view .LVU337
 1116              	.LBB8:
 149:Core/Src/heatshrink_decoder.c ****         uint8_t in_state = hsd->state;
 1117              		.loc 1 149 66 view .LVU338
 150:Core/Src/heatshrink_decoder.c ****         switch (in_state) {
 1118              		.loc 1 150 9 view .LVU339
 150:Core/Src/heatshrink_decoder.c ****         switch (in_state) {
 1119              		.loc 1 150 17 is_stmt 0 view .LVU340
 1120 0030 A57A     		ldrb	r5, [r4, #10]
 1121              	.LVL113:
 151:Core/Src/heatshrink_decoder.c ****         case HSDS_TAG_BIT:
 1122              		.loc 1 151 9 is_stmt 1 view .LVU341
 1123 0032 062D     		cmp	r5, #6
 1124 0034 34D8     		bhi	.L81
 1125 0036 A900     		lsls	r1, r5, #2
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 32


 1126 0038 1B48     		ldr	r0, .L85
 1127 003a 4158     		ldr	r1, [r0, r1]
 1128 003c 8F46     		mov	pc, r1
 1129              		.section	.rodata.heatshrink_decoder_poll,"a",%progbits
 1130              		.align	2
 1131              	.L69:
 1132 0000 22000000 		.word	.L75
 1133 0004 3E000000 		.word	.L74
 1134 0008 4A000000 		.word	.L73
 1135 000c 54000000 		.word	.L72
 1136 0010 5E000000 		.word	.L71
 1137 0014 68000000 		.word	.L70
 1138 0018 72000000 		.word	.L68
 1139              		.section	.text.heatshrink_decoder_poll
 1140              	.L74:
 156:Core/Src/heatshrink_decoder.c ****             break;
 1141              		.loc 1 156 13 view .LVU342
 156:Core/Src/heatshrink_decoder.c ****             break;
 1142              		.loc 1 156 26 is_stmt 0 view .LVU343
 1143 003e 01A9     		add	r1, sp, #4
 1144 0040 2000     		movs	r0, r4
 1145 0042 FFF7FEFF 		bl	st_yield_literal
 1146              	.LVL114:
 156:Core/Src/heatshrink_decoder.c ****             break;
 1147              		.loc 1 156 24 view .LVU344
 1148 0046 A072     		strb	r0, [r4, #10]
 157:Core/Src/heatshrink_decoder.c ****         case HSDS_BACKREF_INDEX_MSB:
 1149              		.loc 1 157 13 is_stmt 1 view .LVU345
 1150 0048 EFE7     		b	.L76
 1151              	.L73:
 159:Core/Src/heatshrink_decoder.c ****             break;
 1152              		.loc 1 159 13 view .LVU346
 159:Core/Src/heatshrink_decoder.c ****             break;
 1153              		.loc 1 159 26 is_stmt 0 view .LVU347
 1154 004a 2000     		movs	r0, r4
 1155 004c FFF7FEFF 		bl	st_backref_index_msb
 1156              	.LVL115:
 159:Core/Src/heatshrink_decoder.c ****             break;
 1157              		.loc 1 159 24 view .LVU348
 1158 0050 A072     		strb	r0, [r4, #10]
 160:Core/Src/heatshrink_decoder.c ****         case HSDS_BACKREF_INDEX_LSB:
 1159              		.loc 1 160 13 is_stmt 1 view .LVU349
 1160 0052 EAE7     		b	.L76
 1161              	.L72:
 162:Core/Src/heatshrink_decoder.c ****             break;
 1162              		.loc 1 162 13 view .LVU350
 162:Core/Src/heatshrink_decoder.c ****             break;
 1163              		.loc 1 162 26 is_stmt 0 view .LVU351
 1164 0054 2000     		movs	r0, r4
 1165 0056 FFF7FEFF 		bl	st_backref_index_lsb
 1166              	.LVL116:
 162:Core/Src/heatshrink_decoder.c ****             break;
 1167              		.loc 1 162 24 view .LVU352
 1168 005a A072     		strb	r0, [r4, #10]
 163:Core/Src/heatshrink_decoder.c ****         case HSDS_BACKREF_COUNT_MSB:
 1169              		.loc 1 163 13 is_stmt 1 view .LVU353
 1170 005c E5E7     		b	.L76
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 33


 1171              	.L71:
 165:Core/Src/heatshrink_decoder.c ****             break;
 1172              		.loc 1 165 13 view .LVU354
 165:Core/Src/heatshrink_decoder.c ****             break;
 1173              		.loc 1 165 26 is_stmt 0 view .LVU355
 1174 005e 2000     		movs	r0, r4
 1175 0060 FFF7FEFF 		bl	st_backref_count_msb
 1176              	.LVL117:
 165:Core/Src/heatshrink_decoder.c ****             break;
 1177              		.loc 1 165 24 view .LVU356
 1178 0064 A072     		strb	r0, [r4, #10]
 166:Core/Src/heatshrink_decoder.c ****         case HSDS_BACKREF_COUNT_LSB:
 1179              		.loc 1 166 13 is_stmt 1 view .LVU357
 1180 0066 E0E7     		b	.L76
 1181              	.L70:
 168:Core/Src/heatshrink_decoder.c ****             break;
 1182              		.loc 1 168 13 view .LVU358
 168:Core/Src/heatshrink_decoder.c ****             break;
 1183              		.loc 1 168 26 is_stmt 0 view .LVU359
 1184 0068 2000     		movs	r0, r4
 1185 006a FFF7FEFF 		bl	st_backref_count_lsb
 1186              	.LVL118:
 168:Core/Src/heatshrink_decoder.c ****             break;
 1187              		.loc 1 168 24 view .LVU360
 1188 006e A072     		strb	r0, [r4, #10]
 169:Core/Src/heatshrink_decoder.c ****         case HSDS_YIELD_BACKREF:
 1189              		.loc 1 169 13 is_stmt 1 view .LVU361
 1190 0070 DBE7     		b	.L76
 1191              	.L68:
 171:Core/Src/heatshrink_decoder.c ****             break;
 1192              		.loc 1 171 13 view .LVU362
 171:Core/Src/heatshrink_decoder.c ****             break;
 1193              		.loc 1 171 26 is_stmt 0 view .LVU363
 1194 0072 01A9     		add	r1, sp, #4
 1195 0074 2000     		movs	r0, r4
 1196 0076 FFF7FEFF 		bl	st_yield_backref
 1197              	.LVL119:
 171:Core/Src/heatshrink_decoder.c ****             break;
 1198              		.loc 1 171 24 view .LVU364
 1199 007a A072     		strb	r0, [r4, #10]
 172:Core/Src/heatshrink_decoder.c ****         default:
 1200              		.loc 1 172 13 is_stmt 1 view .LVU365
 1201 007c D5E7     		b	.L76
 1202              	.L83:
 180:Core/Src/heatshrink_decoder.c ****             return HSDR_POLL_EMPTY;
 1203              		.loc 1 180 13 view .LVU366
 180:Core/Src/heatshrink_decoder.c ****             return HSDR_POLL_EMPTY;
 1204              		.loc 1 180 17 is_stmt 0 view .LVU367
 1205 007e 3368     		ldr	r3, [r6]
 180:Core/Src/heatshrink_decoder.c ****             return HSDR_POLL_EMPTY;
 1206              		.loc 1 180 16 view .LVU368
 1207 0080 BB42     		cmp	r3, r7
 1208 0082 02D0     		beq	.L84
 181:Core/Src/heatshrink_decoder.c ****         }
 1209              		.loc 1 181 20 view .LVU369
 1210 0084 0020     		movs	r0, #0
 1211              	.LVL120:
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 34


 1212              	.L67:
 181:Core/Src/heatshrink_decoder.c ****         }
 1213              		.loc 1 181 20 view .LVU370
 1214              	.LBE8:
 184:Core/Src/heatshrink_decoder.c **** 
 1215              		.loc 1 184 1 view .LVU371
 1216 0086 05B0     		add	sp, sp, #20
 1217              		@ sp needed
 1218              	.LVL121:
 1219              	.LVL122:
 1220              	.LVL123:
 184:Core/Src/heatshrink_decoder.c **** 
 1221              		.loc 1 184 1 view .LVU372
 1222 0088 F0BD     		pop	{r4, r5, r6, r7, pc}
 1223              	.LVL124:
 1224              	.L84:
 1225              	.LBB9:
 180:Core/Src/heatshrink_decoder.c ****             return HSDR_POLL_EMPTY;
 1226              		.loc 1 180 56 view .LVU373
 1227 008a 0120     		movs	r0, #1
 1228 008c FBE7     		b	.L67
 1229              	.LVL125:
 1230              	.L78:
 180:Core/Src/heatshrink_decoder.c ****             return HSDR_POLL_EMPTY;
 1231              		.loc 1 180 56 view .LVU374
 1232              	.LBE9:
 138:Core/Src/heatshrink_decoder.c ****     }
 1233              		.loc 1 138 16 view .LVU375
 1234 008e 0120     		movs	r0, #1
 1235              	.LVL126:
 138:Core/Src/heatshrink_decoder.c ****     }
 1236              		.loc 1 138 16 view .LVU376
 1237 0090 4042     		rsbs	r0, r0, #0
 1238 0092 F8E7     		b	.L67
 1239              	.LVL127:
 1240              	.L79:
 138:Core/Src/heatshrink_decoder.c ****     }
 1241              		.loc 1 138 16 view .LVU377
 1242 0094 0120     		movs	r0, #1
 1243              	.LVL128:
 138:Core/Src/heatshrink_decoder.c ****     }
 1244              		.loc 1 138 16 view .LVU378
 1245 0096 4042     		rsbs	r0, r0, #0
 1246 0098 F5E7     		b	.L67
 1247              	.LVL129:
 1248              	.L80:
 138:Core/Src/heatshrink_decoder.c ****     }
 1249              		.loc 1 138 16 view .LVU379
 1250 009a 0120     		movs	r0, #1
 1251              	.LVL130:
 138:Core/Src/heatshrink_decoder.c ****     }
 1252              		.loc 1 138 16 view .LVU380
 1253 009c 4042     		rsbs	r0, r0, #0
 1254 009e F2E7     		b	.L67
 1255              	.LVL131:
 1256              	.L81:
 1257              	.LBB10:
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 35


 150:Core/Src/heatshrink_decoder.c ****         switch (in_state) {
 1258              		.loc 1 150 17 view .LVU381
 1259 00a0 0220     		movs	r0, #2
 1260 00a2 4042     		rsbs	r0, r0, #0
 1261 00a4 EFE7     		b	.L67
 1262              	.L86:
 1263 00a6 C046     		.align	2
 1264              	.L85:
 1265 00a8 00000000 		.word	.L69
 1266              	.LBE10:
 1267              		.cfi_endproc
 1268              	.LFE2:
 1270              		.section	.text.heatshrink_decoder_finish,"ax",%progbits
 1271              		.align	1
 1272              		.global	heatshrink_decoder_finish
 1273              		.syntax unified
 1274              		.code	16
 1275              		.thumb_func
 1276              		.fpu softvfp
 1278              	heatshrink_decoder_finish:
 1279              	.LVL132:
 1280              	.LFB11:
 337:Core/Src/heatshrink_decoder.c ****     if (hsd == NULL) { return HSDR_FINISH_ERROR_NULL; }
 1281              		.loc 1 337 67 is_stmt 1 view -0
 1282              		.cfi_startproc
 1283              		@ args = 0, pretend = 0, frame = 0
 1284              		@ frame_needed = 0, uses_anonymous_args = 0
 1285              		@ link register save eliminated.
 338:Core/Src/heatshrink_decoder.c ****     switch (hsd->state) {
 1286              		.loc 1 338 5 view .LVU383
 338:Core/Src/heatshrink_decoder.c ****     switch (hsd->state) {
 1287              		.loc 1 338 8 is_stmt 0 view .LVU384
 1288 0000 0028     		cmp	r0, #0
 1289 0002 1AD0     		beq	.L93
 339:Core/Src/heatshrink_decoder.c ****     case HSDS_TAG_BIT:
 1290              		.loc 1 339 5 is_stmt 1 view .LVU385
 339:Core/Src/heatshrink_decoder.c ****     case HSDS_TAG_BIT:
 1291              		.loc 1 339 16 is_stmt 0 view .LVU386
 1292 0004 837A     		ldrb	r3, [r0, #10]
 339:Core/Src/heatshrink_decoder.c ****     case HSDS_TAG_BIT:
 1293              		.loc 1 339 5 view .LVU387
 1294 0006 012B     		cmp	r3, #1
 1295 0008 12D0     		beq	.L89
 1296 000a 08D8     		bhi	.L90
 1297 000c 002B     		cmp	r3, #0
 1298 000e 04D1     		bne	.L96
 341:Core/Src/heatshrink_decoder.c **** 
 1299              		.loc 1 341 9 is_stmt 1 view .LVU388
 341:Core/Src/heatshrink_decoder.c **** 
 1300              		.loc 1 341 19 is_stmt 0 view .LVU389
 1301 0010 0088     		ldrh	r0, [r0]
 1302              	.LVL133:
 341:Core/Src/heatshrink_decoder.c **** 
 1303              		.loc 1 341 56 view .LVU390
 1304 0012 431E     		subs	r3, r0, #1
 1305 0014 9841     		sbcs	r0, r0, r3
 1306 0016 40B2     		sxtb	r0, r0
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 36


 1307 0018 00E0     		b	.L88
 1308              	.LVL134:
 1309              	.L96:
 339:Core/Src/heatshrink_decoder.c ****     case HSDS_TAG_BIT:
 1310              		.loc 1 339 5 view .LVU391
 1311 001a 0120     		movs	r0, #1
 1312              	.LVL135:
 1313              	.L88:
 361:Core/Src/heatshrink_decoder.c **** 
 1314              		.loc 1 361 1 view .LVU392
 1315              		@ sp needed
 1316 001c 7047     		bx	lr
 1317              	.LVL136:
 1318              	.L90:
 339:Core/Src/heatshrink_decoder.c ****     case HSDS_TAG_BIT:
 1319              		.loc 1 339 5 view .LVU393
 1320 001e 023B     		subs	r3, r3, #2
 1321 0020 DBB2     		uxtb	r3, r3
 1322 0022 032B     		cmp	r3, #3
 1323 0024 0CD8     		bhi	.L97
 350:Core/Src/heatshrink_decoder.c **** 
 1324              		.loc 1 350 9 is_stmt 1 view .LVU394
 350:Core/Src/heatshrink_decoder.c **** 
 1325              		.loc 1 350 19 is_stmt 0 view .LVU395
 1326 0026 0088     		ldrh	r0, [r0]
 1327              	.LVL137:
 350:Core/Src/heatshrink_decoder.c **** 
 1328              		.loc 1 350 56 view .LVU396
 1329 0028 431E     		subs	r3, r0, #1
 1330 002a 9841     		sbcs	r0, r0, r3
 1331 002c 40B2     		sxtb	r0, r0
 1332 002e F5E7     		b	.L88
 1333              	.LVL138:
 1334              	.L89:
 356:Core/Src/heatshrink_decoder.c **** 
 1335              		.loc 1 356 9 is_stmt 1 view .LVU397
 356:Core/Src/heatshrink_decoder.c **** 
 1336              		.loc 1 356 19 is_stmt 0 view .LVU398
 1337 0030 0088     		ldrh	r0, [r0]
 1338              	.LVL139:
 356:Core/Src/heatshrink_decoder.c **** 
 1339              		.loc 1 356 56 view .LVU399
 1340 0032 431E     		subs	r3, r0, #1
 1341 0034 9841     		sbcs	r0, r0, r3
 1342 0036 40B2     		sxtb	r0, r0
 1343 0038 F0E7     		b	.L88
 1344              	.LVL140:
 1345              	.L93:
 338:Core/Src/heatshrink_decoder.c ****     switch (hsd->state) {
 1346              		.loc 1 338 31 view .LVU400
 1347 003a 0120     		movs	r0, #1
 1348              	.LVL141:
 338:Core/Src/heatshrink_decoder.c ****     switch (hsd->state) {
 1349              		.loc 1 338 31 view .LVU401
 1350 003c 4042     		rsbs	r0, r0, #0
 1351 003e EDE7     		b	.L88
 1352              	.LVL142:
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 37


 1353              	.L97:
 339:Core/Src/heatshrink_decoder.c ****     case HSDS_TAG_BIT:
 1354              		.loc 1 339 5 view .LVU402
 1355 0040 0120     		movs	r0, #1
 1356              	.LVL143:
 339:Core/Src/heatshrink_decoder.c ****     case HSDS_TAG_BIT:
 1357              		.loc 1 339 5 view .LVU403
 1358 0042 EBE7     		b	.L88
 1359              		.cfi_endproc
 1360              	.LFE11:
 1362              		.text
 1363              	.Letext0:
 1364              		.file 2 "/usr/local/Cellar/arm-gcc-bin@10/10-2020-q4-major/lib/gcc/arm-none-eabi/10.2.1/include/st
 1365              		.file 3 "/usr/local/Cellar/arm-gcc-bin@10/10-2020-q4-major/arm-none-eabi/include/machine/_default_
 1366              		.file 4 "/usr/local/Cellar/arm-gcc-bin@10/10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 1367              		.file 5 "Core/Inc/heatshrink_decoder.h"
 1368              		.file 6 "<built-in>"
ARM GAS  /var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s 			page 38


DEFINED SYMBOLS
                            *ABS*:0000000000000000 heatshrink_decoder.c
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:16     .text.get_bits:0000000000000000 $t
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:23     .text.get_bits:0000000000000000 get_bits
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:180    .text.get_bits:0000000000000078 $d
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:185    .text.st_tag_bit:0000000000000000 $t
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:191    .text.st_tag_bit:0000000000000000 st_tag_bit
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:250    .text.st_tag_bit:0000000000000024 $d
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:255    .text.st_backref_index_msb:0000000000000000 $t
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:261    .text.st_backref_index_msb:0000000000000000 st_backref_index_msb
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:313    .text.st_backref_index_msb:000000000000001c $d
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:318    .text.st_backref_index_lsb:0000000000000000 $t
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:324    .text.st_backref_index_lsb:0000000000000000 st_backref_index_lsb
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:386    .text.st_backref_index_lsb:0000000000000028 $d
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:391    .text.st_backref_count_msb:0000000000000000 $t
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:397    .text.st_backref_count_msb:0000000000000000 st_backref_count_msb
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:449    .text.st_backref_count_msb:000000000000001c $d
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:454    .text.st_backref_count_lsb:0000000000000000 $t
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:460    .text.st_backref_count_lsb:0000000000000000 st_backref_count_lsb
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:516    .text.st_backref_count_lsb:0000000000000024 $d
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:521    .text.push_byte:0000000000000000 $t
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:527    .text.push_byte:0000000000000000 push_byte
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:562    .text.st_yield_literal:0000000000000000 $t
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:568    .text.st_yield_literal:0000000000000000 st_yield_literal
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:666    .text.st_yield_literal:0000000000000044 $d
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:672    .text.st_yield_backref:0000000000000000 $t
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:678    .text.st_yield_backref:0000000000000000 st_yield_backref
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:846    .text.heatshrink_decoder_reset:0000000000000000 $t
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:853    .text.heatshrink_decoder_reset:0000000000000000 heatshrink_decoder_reset
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:914    .text.heatshrink_decoder_sink:0000000000000000 $t
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:921    .text.heatshrink_decoder_sink:0000000000000000 heatshrink_decoder_sink
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:1039   .text.heatshrink_decoder_poll:0000000000000000 $t
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:1046   .text.heatshrink_decoder_poll:0000000000000000 heatshrink_decoder_poll
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:1130   .rodata.heatshrink_decoder_poll:0000000000000000 $d
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:1265   .text.heatshrink_decoder_poll:00000000000000a8 $d
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:1271   .text.heatshrink_decoder_finish:0000000000000000 $t
/var/folders/b6/0xn3z77n589c481l0rsth7mc0000gn/T//ccDVYHXX.s:1278   .text.heatshrink_decoder_finish:0000000000000000 heatshrink_decoder_finish

UNDEFINED SYMBOLS
memset
memcpy
